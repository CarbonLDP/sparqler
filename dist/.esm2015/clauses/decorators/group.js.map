{"version":3,"sources":["clauses/decorators/group.ts"],"names":[],"mappings":"AAMA,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAC3C,OAAO,EAAE,eAAe,EAAE,MAAM,IAAI,CAAC;AACrC,OAAO,EACN,EAAE,EACF,KAAK,GACL,MAAM,yBAAyB,CAAC;AACjC,OAAO,EACN,aAAa,GAEb,MAAM,gBAAgB,CAAC;AASxB,iBAA+E,YAAmB;IACjG,MAAM,MAAM,GAAW,CAAE,KAAK,EAAE,EAAE,EAAE,IAAI,aAAa,CAAE,YAAY,CAAE,CAAE,CAAC;IAExE,MAAM,SAAS,GAAgB,IAAI,SAAS,CAAK,IAAI,EAAE,MAAM,CAAE,CAAC;IAChE,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAmB,SAAS,EAAE,eAAe,CAAS,SAAS,EAAE,EAAE,CAAE,CAAE,CAAC;AACrG,CAAC;AAUD,MAAM,yBAAsF,SAAsB,EAAE,MAAQ;IAC3H,MAAM,CAAC,MAAM,CAAC,MAAM,CAAE,eAAe,CAAE,SAAS,EAAE,MAAM,CAAE,EAAE;QAC3D,OAAO,EAAE,OAAO,CAAC,IAAI,CAAE,SAAS,CAAE;KAClC,CAAE,CAAC;AACL,CAAC","file":"group.js","sourcesContent":["import {\n\tFinishClause,\n\tGroupClause,\n\tHavingClause,\n\tSubFinishClause,\n} from \"./..\";\nimport { Container } from \"./../Container\";\nimport { havingDecorator } from \"./\";\nimport {\n\tBY,\n\tGROUP,\n} from \"./../../patterns/tokens\";\nimport {\n\tStringLiteral,\n\tToken,\n} from \"./../../tokens\";\n\n/**\n * Set a condition to be divide the solutions returned by the query\n * into one or more groups.\n *\n * @param rawCondition Raw condition to be applied to the solutions grouping.\n * @returns Object with the methods to keep constructing the query.\n */\nfunction groupBy<T extends FinishClause | SubFinishClause>( this:Container<T>, rawCondition:string ):HavingClause<T> & T {\n\tconst tokens:Token[] = [ GROUP, BY, new StringLiteral( rawCondition ) ];\n\n\tconst container:Container<T> = new Container<T>( this, tokens );\n\treturn this._finishDecorator<HavingClause<T>>( container, havingDecorator<T, {}>( container, {} ) );\n}\n\n/**\n * Decorator that binds the GroupClause methods to a container and adds them\n * to the provided object.\n *\n * @param container The container where to bind the respective methods.\n * @param object Object to be decorated with the bound methods.\n * @returns The same object provided that has been decorated.\n */\nexport function groupDecorator<T extends FinishClause | SubFinishClause, W extends object>( container:Container<T>, object:W ):W & GroupClause<T> {\n\treturn Object.assign( havingDecorator( container, object ), {\n\t\tgroupBy: groupBy.bind( container ),\n\t} );\n}\n"],"sourceRoot":"../../../src"}