{"version":3,"sources":["index.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,SAAS,EAAE,MAAO,qBAAqB,CAAC;AACjD,OAAO,EAAE,cAAc,EAAE,MAAM,sBAAsB,CAAC;AAQtD,MAAM;IAEL,YAAa,eAAmC;QAC/C,MAAM,SAAS,GAAgB,IAAI,SAAS,CAAK,eAAe,CAAE,CAAC;QACnE,MAAM,CAAC,cAAc,CAAS,SAAS,EAAE,IAAI,CAAE,CAAC;IACjD,CAAC;CAED;AAED,eAAe,QAAQ,CAAC","file":"index.js","sourcesContent":["import {\n\tFinishClause,\n\tQueryClause,\n} from \"./clauses/interfaces\";\nimport { Container }  from \"./clauses/Container\";\nimport { queryDecorator } from \"./clauses/decorators\";\n\nexport interface FinishDecorator<T> extends Function {\n\t<W extends object>( container:Container<T & FinishClause>, object:W ):T & W & FinishClause;\n}\n\n// Comment\nexport interface SPARQLER<T extends FinishClause = FinishClause> extends QueryClause<T> {}\nexport class SPARQLER<T extends FinishClause = FinishClause> {\n\n\tconstructor( finishDecorator?:FinishDecorator<T> ) {\n\t\tconst container:Container<T> = new Container<T>( finishDecorator );\n\t\treturn queryDecorator<T, {}>( container, this );\n\t}\n\n}\n\nexport default SPARQLER;\n"],"sourceRoot":"../src"}