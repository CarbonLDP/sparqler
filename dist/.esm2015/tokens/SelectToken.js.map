{"version":3,"sources":["tokens/SelectToken.ts"],"names":[],"mappings":"AAMA,OAAO,EAAE,YAAY,EAAE,MAAM,SAAS,CAAC;AAEvC,MAAM;IAOL,YAAa,QAAgC;QANpC,UAAK,GAAY,QAAQ,CAAC;QAOlC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEzB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACrB,CAAC;IAED,WAAW,CAAE,GAAG,SAAyB;QACxC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAE,GAAG,SAAS,CAAE,CAAC;QACpC,MAAM,CAAC,IAAI,CAAC;IACb,CAAC;IAED,UAAU,CAAE,GAAG,QAAuB;QACrC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAE,GAAG,QAAQ,CAAE,CAAC;QAClC,MAAM,CAAC,IAAI,CAAC;IACb,CAAC;IAED,WAAW,CAAE,GAAG,QAA2B;QAC1C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAE,GAAG,QAAQ,CAAE,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC;IACb,CAAC;IAED,QAAQ;QACP,IAAI,KAAK,GAAU,QAAQ,CAAC;QAE5B,EAAE,CAAA,CAAE,IAAI,CAAC,QAAS,CAAC;YAAC,KAAK,IAAI,IAAK,IAAI,CAAC,QAAS,EAAE,CAAC;QACnD,EAAE,CAAA,CAAE,IAAI,CAAC,SAAS,CAAC,MAAO,CAAC;YAAC,KAAK,IAAI,IAAK,IAAI,CAAC,SAAS,CAAC,IAAI,CAAE,GAAG,CAAG,EAAE,CAAC;QAExE,KAAK,IAAI,YAAa,YAAY,CAAE,IAAI,CAAC,QAAQ,CAAG,IAAI,CAAC;QAEzD,EAAE,CAAA,CAAE,IAAI,CAAC,SAAS,CAAC,MAAO,CAAC;YAAC,KAAK,IAAI,IAAK,IAAI,CAAC,SAAS,CAAC,IAAI,CAAE,GAAG,CAAG,EAAE,CAAC;QAExE,MAAM,CAAC,KAAK,CAAC;IACd,CAAC;CACD","file":"SelectToken.js","sourcesContent":["import {\n\tPatternToken,\n\tSolutionModifier,\n} from \"./\";\nimport { TokenNode } from \"./TokenNode\";\nimport { VariableToken } from \"./VariableToken\";\nimport { joinPatterns } from \"./utils\";\n\nexport class SelectToken implements TokenNode {\n\treadonly token:\"select\" = \"select\";\n\treadonly modifier?:\"DISTINCT\" | \"REDUCED\";\n\treadonly variables:VariableToken[];\n\treadonly patterns:PatternToken[];\n\treadonly modifiers:SolutionModifier[];\n\n\tconstructor( modifier?:\"DISTINCT\" | \"REDUCED\" ) {\n\t\tthis.modifier = modifier;\n\n\t\tthis.variables = [];\n\t\tthis.patterns = [];\n\t\tthis.modifiers = [];\n\t}\n\n\taddVariable( ...variables:VariableToken[] ):this {\n\t\tthis.variables.push( ...variables );\n\t\treturn this;\n\t}\n\n\taddPattern( ...patterns:PatternToken[] ):this {\n\t\tthis.patterns.push( ...patterns );\n\t\treturn this;\n\t}\n\n\taddModifier( ...modifier:SolutionModifier[] ):this {\n\t\tthis.modifiers.push( ...modifier );\n\t\treturn this;\n\t}\n\n\ttoString():string {\n\t\tlet query:string = `SELECT`;\n\n\t\tif( this.modifier ) query += ` ${ this.modifier }`;\n\t\tif( this.variables.length ) query += ` ${ this.variables.join( \" \" ) }`;\n\n\t\tquery += ` WHERE { ${ joinPatterns( this.patterns ) } }`;\n\n\t\tif( this.modifiers.length ) query += ` ${ this.modifiers.join( \" \" ) }`;\n\n\t\treturn query;\n\t}\n}\n"],"sourceRoot":"../../src"}