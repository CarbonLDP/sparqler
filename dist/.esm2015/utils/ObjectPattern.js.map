{"version":3,"sources":["utils/ObjectPattern.ts"],"names":[],"mappings":"AAIA,OAAO,KAAK,GAAG,MAAM,OAAO,CAAC;AAE7B,OAAO,EAAE,aAAa,EAAE,MAAM,yBAAyB,CAAC;AACxD,OAAO,EACN,UAAU,EACV,WAAW,EACX,SAAS,EACT,QAAQ,EACR,QAAQ,EACR,KAAK,EACL,MAAM,oBAAoB,CAAC;AAC5B,OAAO,EAAE,cAAc,EAAE,MAAM,4BAA4B,CAAC;AAG5D,MAAM,oBAAqB,MAAM;IAEhC,EAAE,CAAA,CAAE,OAAO,MAAM,KAAK,QAAQ,IAAI,MAAM,YAAY,MAAO,CAAC,CAAC,CAAC;QAC7D,EAAE,CAAA,CAAE,MAAM,KAAK,cAAc,CAAC,SAAU,CAAC;YAAC,MAAM,CAAC,CAAE,KAAK,CAAE,CAAC;QAC3D,MAAM,CAAC,CAAE,UAAU,EAAE,IAAI,aAAa,CAAE,MAAgB,CAAE,EAAE,WAAW,CAAE,CAAC;IAC3E,CAAC;IAED,EAAE,CAAA,CAAE,OAAO,MAAM,KAAK,QAAQ,IAAI,MAAM,YAAY,MAAO,CAAC,CAAC,CAAC;QAC7D,EAAE,CAAA,CAAE,MAAM,CAAC,SAAS,CAAE,MAAM,CAAC,OAAO,EAAE,CAAG,CAAC;YACzC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAE,MAAM,GAAG,EAAE,EAAE,SAAS,CAAE,CAAC;QAC/C,MAAM,CAAC,IAAI,CAAC,OAAO,CAAE,MAAM,GAAG,EAAE,EAAE,OAAO,CAAE,CAAC;IAC7C,CAAC;IAED,EAAE,CAAA,CAAE,OAAO,MAAM,KAAK,SAAS,IAAI,MAAM,YAAY,OAAQ,CAAC;QAC7D,MAAM,CAAC,IAAI,CAAC,OAAO,CAAE,MAAM,GAAG,EAAE,EAAE,SAAS,CAAE,CAAC;IAE/C,EAAE,CAAA,CAAE,MAAM,YAAY,IAAK,CAAC;QAC3B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAE,MAAM,CAAC,WAAW,EAAE,EAAE,UAAU,CAAE,CAAC;IAEzD,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC;AAC/B,CAAC;AAED,MAAM,kBAAmB,KAAY,EAAE,IAAW;IACjD,EAAE,CAAA,CAAE,IAAI,IAAI,GAAI,CAAC;QAAC,IAAI,GAAG,GAAG,CAAE,IAAI,CAAE,CAAC;IACrC,MAAM,CAAC,CAAE,UAAU,EAAE,IAAI,aAAa,CAAE,KAAK,CAAE,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,aAAa,CAAE,IAAI,CAAE,EAAE,SAAS,CAAE,CAAC;AAC1H,CAAC","file":"ObjectPattern.js","sourcesContent":["import {\n\tSupportedNativeTypes,\n\tElementPattern\n} from \"../patterns/interfaces\";\nimport * as XSD from \"./XSD\";\nimport { Token } from \"../tokens/Token\";\nimport { StringLiteral } from \"../tokens/StringLiteral\";\nimport {\n\tOPEN_QUOTE,\n\tCLOSE_QUOTE,\n\tCLOSE_IRI,\n\tOPEN_IRI,\n\tOFF_TYPE,\n\tUNDEF\n} from \"../patterns/tokens\";\nimport { PatternBuilder } from \"../patterns/PatternBuilder\";\n\nexport function serialize( object:SupportedNativeTypes | ElementPattern ):Token[];\nexport function serialize( object ):Token[] {\n\n\tif( typeof object === \"string\" || object instanceof String ) {\n\t\tif( object === PatternBuilder.undefined ) return [ UNDEF ];\n\t\treturn [ OPEN_QUOTE, new StringLiteral( object as string ), CLOSE_QUOTE ];\n\t}\n\n\tif( typeof object === \"number\" || object instanceof Number ) {\n\t\tif( Number.isInteger( object.valueOf() ) )\n\t\t\treturn this.addType( object + \"\", \"integer\" );\n\t\treturn this.addType( object + \"\", \"float\" );\n\t}\n\n\tif( typeof object === \"boolean\" || object instanceof Boolean )\n\t\treturn this.addType( object + \"\", \"boolean\" );\n\n\tif( object instanceof Date )\n\t\treturn this.addType( object.toISOString(), \"dateTime\" );\n\n\treturn object.getSelfTokens();\n}\n\nexport function addType( value:string, type:string ):Token[] {\n\tif( type in XSD ) type = XSD[ type ];\n\treturn [ OPEN_QUOTE, new StringLiteral( value ), CLOSE_QUOTE, OFF_TYPE, OPEN_IRI, new StringLiteral( type ), CLOSE_IRI ];\n}\n\n"],"sourceRoot":"../../src"}