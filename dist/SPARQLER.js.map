{"version":3,"sources":["SPARQLER.ts"],"names":[],"mappings":";;AAAA,4CAI0B;AAC1B,0DAA6D;AAQ7D;IAEC,kBAAa,eAAmC;QAC/C,IAAM,SAAS,GAAgB,IAAI,mBAAS,CAAK,eAAe,CAAE,CAAC;QACnE,MAAM,CAAC,2BAAc,CAAS,SAAS,EAAE,IAAI,CAAE,CAAC;IACjD,CAAC;IAEF,eAAC;AAAD,CAPA,AAOC,IAAA;AAPY,4BAAQ;AASrB,kBAAe,QAAQ,CAAC","file":"SPARQLER.js","sourcesContent":["import {\n\tContainer,\n\tFinishClause,\n\tQueryClause,\n} from \"sparqler/clauses\";\nimport { queryDecorator } from \"sparqler/clauses/decorators\";\n\nexport interface FinishDecorator<T extends FinishClause> extends Function {\n\t<W extends object>( container:Container<T>, object:W ):T & W;\n}\n\n// Comment\nexport interface SPARQLER<T extends FinishClause = FinishClause> extends QueryClause<T> {}\nexport class SPARQLER<T extends FinishClause = FinishClause> {\n\n\tconstructor( finishDecorator?:FinishDecorator<T> ) {\n\t\tconst container:Container<T> = new Container<T>( finishDecorator );\n\t\treturn queryDecorator<T, {}>( container, this );\n\t}\n\n}\n\nexport default SPARQLER;\n"]}