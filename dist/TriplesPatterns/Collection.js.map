{"version":3,"sources":["TriplesPatterns/Collection.ts"],"names":[],"mappings":";;;;;;AACA,6CAM4B;AAC5B,mDAAkD;AASlD,sDAAwD;AAExD;IAAgC,8BAAkC;IAIjE,oBAAa,QAAoB,EAAE,MAAoF;QAAvH,YACC,kBAAO,QAAQ,CAAE,SAkBjB;QAhBA,EAAE,CAAA,CAAE,MAAM,CAAC,MAAM,KAAK,CAAE,CAAC,CAAC,CAAC;YAC1B,KAAI,CAAC,aAAa,GAAG,CAAE,yBAAgB,CAAE,CAAC;QAC3C,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,KAAI,CAAC,aAAa,GAAG,CAAE,wBAAe,CAAE,CAAC;QAC1C,CAAC;QAED,MAAM,CAAC,OAAO,CAAE,UAAE,KAAK,EAAE,KAAK;YAC7B,CAAA,KAAA,KAAI,CAAC,aAAa,CAAA,CAAC,IAAI,WAAK,aAAa,CAAC,SAAS,CAAE,KAA6B,CAAE,EAAG;YACvF,EAAE,CAAA,CAAE,KAAK,GAAG,MAAM,CAAC,MAAM,GAAG,CAAE,CAAC;gBAAC,KAAI,CAAC,aAAa,CAAC,IAAI,CAAE,wBAAe,CAAE,CAAC;;QAC5E,CAAC,CAAE,CAAC;QAEJ,EAAE,CAAA,CAAE,MAAM,CAAC,MAAM,KAAK,CAAE,CAAC,CAAC,CAAC;YAC1B,KAAI,CAAC,aAAa,CAAC,IAAI,CAAE,0BAAiB,CAAE,CAAC;QAC9C,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,KAAI,CAAC,aAAa,CAAC,IAAI,CAAE,yBAAgB,CAAE,CAAC;QAC7C,CAAC;;IACF,CAAC;IAED,+BAAU,GAAV;QACC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAE,IAAI,CAAC,aAAa,CAAE,CAAC;IACxD,CAAC;IAES,yBAAI,GAAd;QAAA,iBAMC;QALA,iBAAM,IAAI,WAAE,CAAC;QACb,IAAI,CAAC,UAAU,CAAC,YAAY,GAAG;YAC9B,UAAU,EAAE,cAAM,OAAA,KAAI,CAAC,UAAU,EAAE,EAAjB,CAAiB;YACnC,aAAa,EAAE,cAAM,OAAA,KAAI,CAAC,aAAa,EAAlB,CAAkB;SACvC,CAAC;IACH,CAAC;IAEF,iBAAC;AAAD,CArCA,AAqCC,CArC+B,+BAAc,GAqC7C;AArCY,gCAAU;;AAuCvB,kBAAe,UAAU,CAAC","file":"Collection.js","sourcesContent":["import { Token } from \"../Tokens/Token\";\nimport {\n\tOPEN_MULTI_LIST,\n\tCLOSE_MULTI_LIST,\n\tOPEN_SINGLE_LIST,\n\tCLOSE_SINGLE_LIST,\n\tEMPTY_SEPARATOR\n} from \"../Patterns/Tokens\";\nimport { TriplesPattern } from \"./TriplesPattern\";\nimport {\n\tTriplesNodePattern,\n\tIRIResolver,\n\tsupportedNativeTypes\n} from \"../Patterns\";\nimport { Resource } from \"./Resource\";\nimport { Variable } from \"./Variable\";\nimport { Literal } from \"./Literals\";\nimport * as ObjectPattern from \"../Utils/ObjectPattern\";\n\nexport class Collection extends TriplesPattern<TriplesNodePattern> implements TriplesNodePattern {\n\n\tprotected elementTokens:Token[];\n\n\tconstructor( resolver:IRIResolver, values:(supportedNativeTypes | Resource | Variable | Literal | TriplesNodePattern)[] ) {\n\t\tsuper( resolver );\n\n\t\tif( values.length === 1 ) {\n\t\t\tthis.elementTokens = [ OPEN_SINGLE_LIST ];\n\t\t} else {\n\t\t\tthis.elementTokens = [ OPEN_MULTI_LIST ];\n\t\t}\n\n\t\tvalues.forEach( ( value, index ) => {\n\t\t\tthis.elementTokens.push( ...ObjectPattern.serialize( value as supportedNativeTypes ) );\n\t\t\tif( index < values.length - 1 ) this.elementTokens.push( EMPTY_SEPARATOR );\n\t\t} );\n\n\t\tif( values.length === 1 ) {\n\t\t\tthis.elementTokens.push( CLOSE_SINGLE_LIST );\n\t\t} else {\n\t\t\tthis.elementTokens.push( CLOSE_MULTI_LIST );\n\t\t}\n\t}\n\n\tgetPattern():Token[] {\n\t\treturn this.elementTokens.concat( this.patternTokens );\n\t}\n\n\tprotected init():void {\n\t\tsuper.init();\n\t\tthis.interfaces.graphPattern = {\n\t\t\tgetPattern: () => this.getPattern(),\n\t\t\tgetSelfTokens: () => this.elementTokens,\n\t\t};\n\t}\n\n}\n\nexport default Collection;\n"]}