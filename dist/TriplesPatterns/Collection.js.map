{"version":3,"sources":["TriplesPatterns/Collection.ts"],"names":[],"mappings":";;;;;;;;;;;;AACA,6CAM4B;AAC5B,mDAAkD;AASlD,sDAAwD;AACxD,yDAAwD;AAExD;IAAgC,8BAAkC;IAIjE,oBAAa,QAAoB,EAAE,MAAoF;QAAvH,YACC,kBAAO,QAAQ,CAAE,SAcjB;QAZA,IAAI,MAAM,GAAW,EAAE,CAAC;QACxB,MAAM,CAAC,OAAO,CAAE,UAAE,KAAK,EAAE,KAAK;YAC7B,MAAM,CAAC,IAAI,OAAX,MAAM,EAAU,aAAa,CAAC,SAAS,CAAE,KAA6B,CAAE,EAAG;YAC3E,EAAE,CAAA,CAAE,KAAK,GAAG,MAAM,CAAC,MAAM,GAAG,CAAE,CAAC;gBAAC,MAAM,CAAC,IAAI,CAAE,wBAAe,CAAE,CAAC;QAChE,CAAC,CAAE,CAAC;QAEJ,IAAI,QAAQ,GAAW,MAAM,CAAC,MAAM,IAAI,CAAC,IAAI,CAAE,MAAM,CAAC,IAAI,CAAE,UAAA,KAAK,IAAI,OAAA,KAAK,YAAY,6BAAa,EAA9B,CAA8B,CAAE,CAAC;QACtG,KAAI,CAAC,aAAa;YACjB,QAAQ,GAAG,yBAAgB,GAAG,wBAAe;iBAC1C,MAAM;YACT,QAAQ,GAAG,0BAAiB,GAAG,yBAAgB;UAC/C,CAAC;;IACH,CAAC;IAED,+BAAU,GAAV;QACC,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,MAAM,CAAE,IAAI,CAAC,aAAa,CAAE,CAAC;IAC1D,CAAC;IAES,yBAAI,GAAd;QAAA,iBAMC;QALA,iBAAM,IAAI,WAAE,CAAC;QACb,IAAI,CAAC,UAAU,CAAC,YAAY,GAAG;YAC9B,UAAU,EAAE,cAAM,OAAA,KAAI,CAAC,UAAU,EAAE,EAAjB,CAAiB;YACnC,aAAa,EAAE,cAAM,OAAA,KAAI,CAAC,aAAa,EAAE,EAApB,CAAoB;SACzC,CAAC;IACH,CAAC;IAEF,iBAAC;AAAD,CAjCA,AAiCC,CAjC+B,+BAAc,GAiC7C;AAjCY,gCAAU;AAmCvB,kBAAe,UAAU,CAAC","file":"Collection.js","sourcesContent":["import { Token } from \"../Tokens/Token\";\nimport {\n\tOPEN_MULTI_LIST,\n\tCLOSE_MULTI_LIST,\n\tOPEN_SINGLE_LIST,\n\tCLOSE_SINGLE_LIST,\n\tEMPTY_SEPARATOR\n} from \"../Patterns/Tokens\";\nimport { TriplesPattern } from \"./TriplesPattern\";\nimport {\n\tTriplesNodePattern,\n\tIRIResolver,\n\tsupportedNativeTypes\n} from \"../Patterns\";\nimport { Resource } from \"./Resource\";\nimport { Variable } from \"./Variable\";\nimport { Literal } from \"./Literals\";\nimport * as ObjectPattern from \"../Utils/ObjectPattern\";\nimport { NewLineSymbol } from \"../Tokens/NewLineSymbol\";\n\nexport class Collection extends TriplesPattern<TriplesNodePattern> implements TriplesNodePattern {\n\n\tprotected elementTokens:Token[];\n\n\tconstructor( resolver:IRIResolver, values:(supportedNativeTypes | Resource | Variable | Literal | TriplesNodePattern)[] ) {\n\t\tsuper( resolver );\n\n\t\tlet tokens:Token[] = [];\n\t\tvalues.forEach( ( value, index ) => {\n\t\t\ttokens.push( ...ObjectPattern.serialize( value as supportedNativeTypes ) );\n\t\t\tif( index < values.length - 1 ) tokens.push( EMPTY_SEPARATOR );\n\t\t} );\n\n\t\tlet isSingle:boolean = values.length <= 1 && ! tokens.find( token => token instanceof NewLineSymbol );\n\t\tthis.elementTokens = [\n\t\t\tisSingle ? OPEN_SINGLE_LIST : OPEN_MULTI_LIST,\n\t\t\t...tokens,\n\t\t\tisSingle ? CLOSE_SINGLE_LIST : CLOSE_MULTI_LIST\n\t\t];\n\t}\n\n\tgetPattern():Token[] {\n\t\treturn this.getSelfTokens().concat( this.patternTokens );\n\t}\n\n\tprotected init():void {\n\t\tsuper.init();\n\t\tthis.interfaces.graphPattern = {\n\t\t\tgetPattern: () => this.getPattern(),\n\t\t\tgetSelfTokens: () => this.getSelfTokens(),\n\t\t};\n\t}\n\n}\n\nexport default Collection;\n"]}