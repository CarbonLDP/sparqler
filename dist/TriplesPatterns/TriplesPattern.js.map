{"version":3,"sources":["TriplesPatterns/TriplesPattern.ts"],"names":[],"mappings":";AAWA,sDAAwD;AAGxD,6CAG4B;AAE5B;IAYC,wBAAa,QAAoB;QAChC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,IAAI,EAAE,CAAC;IACb,CAAC;IAcD,4BAAG,GAAH,UAAK,QAA0B,EAAE,MAAM;QACtC,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAE,QAAQ,EAAE,MAAM,CAAE,CAAC;IAC7C,CAAC;IAED,sCAAa,GAAb;QACC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;IAC3B,CAAC;IAES,6BAAI,GAAd;QAAA,iBASC;QARA,IAAI,CAAC,UAAU,GAAG;YACjB,UAAU,EAAE;gBACX,GAAG,EAAE,UAAE,QAAQ,EAAE,MAAM;oBACtB,KAAI,CAAC,aAAa,CAAC,IAAI,CAAE,+BAAsB,CAAE,CAAC;oBAClD,MAAM,CAAC,KAAI,CAAC,WAAW,CAAE,QAAQ,EAAE,MAAM,CAAE,CAAC;gBAC7C,CAAC;aACD;SACD,CAAC;IACH,CAAC;IAAA,CAAC;IAGM,oCAAW,GAAnB,UAAqB,QAAQ,EAAE,MAAM;QACpC,IAAI,MAAM,GAAW,CAAE,OAAO,QAAQ,KAAK,QAAQ,IAAI,QAAQ,YAAY,MAAM,CAAE;cAChF,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAE,QAAkB,EAAE,IAAI,CAAE;cACrD,QAAQ,CAAC,aAAa,EAAE,CAAC;QAE5B,MAAM,GAAG,KAAK,CAAC,OAAO,CAAE,MAAM,CAAE,GAAG,MAAM,GAAG,CAAE,MAAM,CAAE,CAAC;QACvD,MAAM,CAAC,OAAO,CAAE,UAAE,KAAK,EAAE,KAAK;YAC7B,MAAM,CAAC,IAAI,OAAX,MAAM,EAAU,aAAa,CAAC,SAAS,CAAE,KAAK,CAAE,EAAG;YACnD,EAAE,CAAA,CAAE,KAAK,GAAG,MAAM,CAAC,MAAM,GAAG,CAAE,CAAC;gBAAC,MAAM,CAAC,IAAI,CAAE,gCAAuB,CAAE,CAAC;QACxE,CAAC,CAAE,CAAC;QAEJ,CAAA,KAAA,IAAI,CAAC,aAAa,CAAA,CAAC,IAAI,WAAK,MAAM,EAAG;QACrC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAE,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,YAAY,CAAE,CAAC;;IACtF,CAAC;IAEF,qBAAC;AAAD,CAlEA,AAkEC,IAAA;AAlEqB,wCAAc;;AAoEpC,kBAAe,cAAc,CAAC","file":"TriplesPattern.js","sourcesContent":["import {\n\tTriplesSameSubject,\n\tTriplesSameSubjectMore,\n\tsupportedNativeTypes,\n\tIRIResolver,\n\tGraphPattern,\n\tElementPattern,\n\tTriplesNodePattern\n} from \"../Patterns\";\nimport { Literal } from \"./Literals\";\nimport { Resource } from \"./Resource\";\nimport * as ObjectPattern from \"../Utils/ObjectPattern\";\nimport { Variable } from \"./Variable\";\nimport { Token } from \"../Tokens/Token\";\nimport {\n\tSAME_SUBJECT_SEPARATOR,\n\tSAME_PROPERTY_SEPARATOR\n} from \"../Patterns/Tokens\";\n\nexport abstract class TriplesPattern<T extends GraphPattern> implements TriplesSameSubject<T>, ElementPattern {\n\n\tprotected abstract elementTokens:Token[];\n\tprotected patternTokens:Token[];\n\n\tprotected interfaces:{\n\t\taddPattern:TriplesSameSubjectMore<T>;\n\t\tgraphPattern?:T\n\t};\n\n\tprivate resolver:IRIResolver;\n\n\tconstructor( resolver:IRIResolver ) {\n\t\tthis.resolver = resolver;\n\t\tthis.patternTokens = [];\n\t\tthis.init();\n\t}\n\n\thas( propertyIRI:string, value:supportedNativeTypes ):TriplesSameSubjectMore<T> & T;\n\thas( propertyIRI:string, resource:Resource ):TriplesSameSubjectMore<T> & T;\n\thas( propertyIRI:string, variable:Variable ):TriplesSameSubjectMore<T> & T;\n\thas( propertyIRI:string, literal:Literal ):TriplesSameSubjectMore<T> & T;\n\thas( propertyIRI:string, node:TriplesNodePattern ):TriplesSameSubjectMore<T> & T;\n\thas( propertyIRI:string, values:( supportedNativeTypes | Resource | Variable | Literal | TriplesNodePattern )[] ):TriplesSameSubjectMore<T> & T;\n\thas( propertyVariable:Variable, value:supportedNativeTypes ):TriplesSameSubjectMore<T> & T;\n\thas( propertyVariable:Variable, resource:Resource ):TriplesSameSubjectMore<T> & T;\n\thas( propertyVariable:Variable, variable:Variable ):TriplesSameSubjectMore<T> & T;\n\thas( propertyVariable:Variable, literal:Literal ):TriplesSameSubjectMore<T> & T;\n\thas( propertyVariable:Variable, node:TriplesNodePattern ):TriplesSameSubjectMore<T> & T;\n\thas( propertyVariable:Variable, values:( supportedNativeTypes | Resource | Variable | Literal | TriplesNodePattern )[] ):TriplesSameSubjectMore<T> & T;\n\thas( property:string | Variable, values ):TriplesSameSubjectMore<T> & T {\n\t\tthis.patternTokens = [];\n\t\treturn this._addPattern( property, values );\n\t}\n\n\tgetSelfTokens():Token[] {\n\t\treturn this.elementTokens;\n\t}\n\n\tprotected init():void {\n\t\tthis.interfaces = {\n\t\t\taddPattern: {\n\t\t\t\tand: ( property, values ) => {\n\t\t\t\t\tthis.patternTokens.push( SAME_SUBJECT_SEPARATOR );\n\t\t\t\t\treturn this._addPattern( property, values );\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t};\n\n\tprivate _addPattern( property:string | Variable, values:ElementPattern | ElementPattern[] ):TriplesSameSubjectMore<T> & T;\n\tprivate _addPattern( property, values ):TriplesSameSubjectMore<T> & T {\n\t\tlet tokens:Token[] = ( typeof property === \"string\" || property instanceof String )\n\t\t\t? this.resolver._resolveIRI( property as string, true )\n\t\t\t: property.getSelfTokens();\n\n\t\tvalues = Array.isArray( values ) ? values : [ values ];\n\t\tvalues.forEach( ( value, index ) => {\n\t\t\ttokens.push( ...ObjectPattern.serialize( value ) );\n\t\t\tif( index < values.length - 1 ) tokens.push( SAME_PROPERTY_SEPARATOR );\n\t\t} );\n\n\t\tthis.patternTokens.push( ...tokens );\n\t\treturn Object.assign( {}, this.interfaces.addPattern, this.interfaces.graphPattern );\n\t}\n\n}\n\nexport default TriplesPattern;\n"]}