{"version":3,"sources":["clauses/Container.ts"],"names":[],"mappings":"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","file":"Container.js","sourcesContent":["import { finishDecorator as originalFinishDecorator } from \"sparqler/clauses/decorators/finish\";\nimport { FinishClause } from \"sparqler/clauses/interfaces\";\nimport {\n\tGraphPattern,\n\tIRIResolver,\n} from \"sparqler/patterns/interfaces\";\nimport { PREFIX_SYMBOL } from \"sparqler/patterns/tokens\";\nimport { StringLiteral } from \"sparqler/tokens/StringLiteral\";\nimport { Token } from \"sparqler/tokens/Token\";\nimport {\n\tgetPrefixedParts,\n\tisPrefixed,\n\tresolve,\n} from \"sparqler/utils/IRI\";\n\n\n// Base decorator\n\nexport interface ObjectClause {\n\t[ method:string ]:Function;\n}\n\nexport function genericDecorator<U extends ObjectClause, W extends object>( properties:U, base:Container<any>, object:W ):W & U {\n\tfor( const key of Object.keys( properties ) ) properties[ key ] = properties[ key ].bind( base );\n\treturn Object.assign<W, U>( object, properties );\n}\n\n\n// IRIResolver implementation\n\nexport type PrefixMap = Map<string, boolean>;\n\nexport class Resolver implements IRIResolver {\n\n\t/**\n\t * Map to store prefixes and information of its usage\n\t */\n\treadonly _prefixes:PrefixMap;\n\n\t/**\n\t * IRI to resolve relative RDF properties\n\t */\n\treadonly _vocab:string;\n\n\tconstructor( base?:Resolver, vocab?:string ) {\n\t\tthis._prefixes = base\n\t\t\t? new Map( base._prefixes.entries() )\n\t\t\t: new Map();\n\n\t\tthis._vocab = vocab ? vocab : base ? base._vocab : void 0;\n\n\t\tif( new.target === Resolver ) Object.freeze( this );\n\t}\n\n\t_resolveIRI( relativeIRI:string, vocab:boolean = false ):Token[] {\n\t\tlet tokens:Token[];\n\n\t\tif( isPrefixed( relativeIRI ) ) {\n\t\t\tconst [ prefix, prefixIRI ]:[ string, string ] = getPrefixedParts( relativeIRI );\n\n\t\t\tconst used:boolean = this._prefixes.get( prefix );\n\t\t\tif( used === void 0 ) throw new Error( \"IllegalArgumentError: The used prefix has not been declared\" );\n\n\t\t\ttokens = [ new StringLiteral( prefix ), PREFIX_SYMBOL, new StringLiteral( prefixIRI ) ];\n\t\t\tif( ! used ) this._prefixes.set( prefix, true );\n\t\t} else {\n\t\t\ttokens = resolve( relativeIRI, vocab ? this._vocab : void 0 );\n\t\t}\n\n\t\treturn tokens;\n\t}\n}\n\n// Base container\nexport interface FinishDecorator<T extends FinishClause | GraphPattern> extends Function {\n\t<W extends object>( container:Container<T>, object:W ):T & W;\n}\n\nexport class Container<T extends FinishClause | GraphPattern = FinishClause> {\n\n\t/**\n\t * Array containing the query tokens\n\t */\n\treadonly _tokens:Token[];\n\n\t/**\n\t * Decorator that extends the finish clause\n\t */\n\treadonly _finishDecorator:FinishDecorator<T>;\n\n\t/**\n\t * Implementation of the IRI Resolver interface\n\t */\n\treadonly _iriResolver:Resolver;\n\n\tconstructor();\n\tconstructor( finishDecorator:FinishDecorator<T> );\n\tconstructor( previousContainer:Container<any>, newTokens:Token[] );\n\tconstructor( previousContainer:Container<any>, newTokens:Token[], iriResolver:Resolver );\n\tconstructor( previousContainerOrFinishDecorator?:Container<any> | FinishDecorator<T>, newTokens?:Token[], iriResolver?:Resolver ) {\n\t\tconst container:Container<any> = previousContainerOrFinishDecorator instanceof Function\n\t\t\t? void 0\n\t\t\t: previousContainerOrFinishDecorator;\n\n\t\tconst finishDecorator:FinishDecorator<T> = previousContainerOrFinishDecorator instanceof Function\n\t\t\t? previousContainerOrFinishDecorator\n\t\t\t: originalFinishDecorator as FinishDecorator<T>;\n\n\t\tthis._iriResolver = iriResolver\n\t\t\t? iriResolver : container\n\t\t\t\t? new Resolver( container._iriResolver )\n\t\t\t\t: new Resolver();\n\n\t\tconst previousTokens:Token[] = container ? container._tokens : [];\n\t\tthis._tokens = newTokens\n\t\t\t? previousTokens.concat( newTokens )\n\t\t\t: previousTokens;\n\n\t\tthis._finishDecorator = container\n\t\t\t? container._finishDecorator\n\t\t\t: finishDecorator;\n\n\t\tif( new.target === Container ) Object.freeze( this );\n\t}\n}\n\nexport default Container;\n"]}