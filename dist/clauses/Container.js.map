{"version":3,"sources":["clauses/Container.ts"],"names":[],"mappings":";;AAAA,6DAAgG;AAEhG,wDAAuD;AASvD;IAqBC,mBAAa,kCAAuE,EAAE,SAAkB,EAAE,WAAwB;;QACjI,IAAM,SAAS,GAAkB,kCAAkC,YAAY,QAAQ;cACpF,KAAK,CAAC;cACN,kCAAkC,CAAC;QAEtC,IAAM,eAAe,GAAsB,kCAAkC,YAAY,QAAQ;cAC9F,kCAAkC;cAClC,wBAA6C,CAAC;QAEjD,IAAI,CAAC,YAAY,GAAG,WAAW;cAC5B,WAAW,GAAG,SAAS;cACtB,IAAI,yBAAW,CAAE,SAAS,CAAC,YAAY,CAAE;cACzC,IAAI,yBAAW,EAAE,CAAC;QAEtB,IAAM,cAAc,GAAW,SAAS,GAAG,SAAS,CAAC,OAAO,GAAG,EAAE,CAAC;QAClE,IAAI,CAAC,OAAO,GAAG,SAAS;cACrB,cAAc,CAAC,MAAM,CAAE,SAAS,CAAE;cAClC,cAAc,CAAC;QAElB,IAAI,CAAC,gBAAgB,GAAG,SAAS;cAC9B,SAAS,CAAC,gBAAgB;cAC1B,eAAe,CAAC;QAEnB,EAAE,CAAA,CAAE,eAAe,SAAU,CAAC;YAAC,MAAM,CAAC,MAAM,CAAE,IAAI,CAAE,CAAC;IACtD,CAAC;IACF,gBAAC;AAAD,CA9CA,AA8CC,IAAA;AA9CY,8BAAS;AAgDtB,kBAAe,SAAS,CAAC","file":"Container.js","sourcesContent":["import { finishDecorator as originalFinishDecorator } from \"sparqler/clauses/decorators/finish\";\nimport { FinishClause } from \"sparqler/clauses/interfaces\";\nimport { IRIResolver } from \"sparqler/iri/IRIResolver\";\nimport { GraphPattern } from \"sparqler/patterns/interfaces\";\nimport { Token } from \"sparqler/tokens/Token\";\n\n\nexport interface FinishDecorator<T extends FinishClause | GraphPattern> extends Function {\n\t<W extends object>( container:Container<T>, object:W ):T & W;\n}\n\nexport class Container<T extends FinishClause | GraphPattern = FinishClause> {\n\n\t/**\n\t * Array containing the query tokens\n\t */\n\treadonly _tokens:Token[];\n\n\t/**\n\t * Decorator that extends the finish clause\n\t */\n\treadonly _finishDecorator:FinishDecorator<T>;\n\n\t/**\n\t * Implementation of the IRI Resolver interface\n\t */\n\treadonly _iriResolver:IRIResolver;\n\n\tconstructor();\n\tconstructor( finishDecorator:FinishDecorator<T> );\n\tconstructor( previousContainer:Container<any>, newTokens:Token[] );\n\tconstructor( previousContainer:Container<any>, newTokens:Token[], iriResolver:IRIResolver );\n\tconstructor( previousContainerOrFinishDecorator?:Container<any> | FinishDecorator<T>, newTokens?:Token[], iriResolver?:IRIResolver ) {\n\t\tconst container:Container<any> = previousContainerOrFinishDecorator instanceof Function\n\t\t\t? void 0\n\t\t\t: previousContainerOrFinishDecorator;\n\n\t\tconst finishDecorator:FinishDecorator<T> = previousContainerOrFinishDecorator instanceof Function\n\t\t\t? previousContainerOrFinishDecorator\n\t\t\t: originalFinishDecorator as FinishDecorator<T>;\n\n\t\tthis._iriResolver = iriResolver\n\t\t\t? iriResolver : container\n\t\t\t\t? new IRIResolver( container._iriResolver )\n\t\t\t\t: new IRIResolver();\n\n\t\tconst previousTokens:Token[] = container ? container._tokens : [];\n\t\tthis._tokens = newTokens\n\t\t\t? previousTokens.concat( newTokens )\n\t\t\t: previousTokens;\n\n\t\tthis._finishDecorator = container\n\t\t\t? container._finishDecorator\n\t\t\t: finishDecorator;\n\n\t\tif( new.target === Container ) Object.freeze( this );\n\t}\n}\n\nexport default Container;\n"]}