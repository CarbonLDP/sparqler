{"version":3,"sources":["clauses/SolutionModifierClause.ts"],"names":[],"mappings":";;AACA,uCAA6C;AAQ7C,SAAgB,8BAA8B,CAAsE,SAAW,EAAE,KAA2B;IAC3J,IAAM,WAAW,GAA+B,SAAS,CAAC,WAAW,CAAC,KAAK,KAAK,OAAO,CAAC,CAAC;QACxF,eAAe,CAAE,SAAS,CAAC,WAAW,EAAE,KAAK,CAAE,CAAC,CAAC;QACjD,gBAAgB,CAAE,SAAS,CAAC,WAAW,EAAE,KAAK,CAAE,CAAC;IAElD,OAAO,oBAAY,CAAE,SAAS,EAAE,EAAE,WAAW,aAAA,EAAgB,CAAE,CAAC;AACjE,CAAC;AAND,wEAMC;AAED,SAAS,gBAAgB,CAA0D,WAAa,EAAE,KAA2B;IAC5H,IAAM,SAAS,GAA2B,WAAW,CAAC,SAAS,CAAC,MAAM,CAAE,KAAK,CAAE,CAAC;IAChF,OAAO,oBAAY,CAAE,WAAW,EAAE,EAAE,SAAS,WAAA,EAAgB,CAAE,CAAC;AACjE,CAAC;AAED,SAAS,eAAe,CAAa,UAAuC,EAAE,KAA2B;IACxG,IAAM,WAAW,GAAoB,gBAAgB,CAAE,UAAU,CAAC,WAAW,EAAE,KAAK,CAAE,CAAC;IACvF,OAAO,oBAAY,CAAE,UAAU,EAAE,EAAE,WAAW,aAAA,EAAE,CAAE,CAAC;AACpD,CAAC","file":"SolutionModifierClause.js","sourcesContent":["import { Container } from \"../data/Container\";\nimport { cloneElement } from \"../data/utils\";\n\nimport { QueryClauseToken } from \"../tokens/QueryClauseToken\";\nimport { QueryToken } from \"../tokens/QueryToken\";\nimport { SolutionModifierToken } from \"../tokens/SolutionModifierToken\";\nimport { SubSelectToken } from \"../tokens/SubSelectToken\";\n\n\nexport function cloneSolutionModifierContainer<C extends Container<QueryToken<QueryClauseToken> | SubSelectToken>>( container:C, token:SolutionModifierToken ):C {\n\tconst targetToken:QueryToken | SubSelectToken = container.targetToken.token === \"query\" ?\n\t\t_cloneFromQuery( container.targetToken, token ) :\n\t\t_cloneFromClause( container.targetToken, token );\n\n\treturn cloneElement( container, { targetToken } as Partial<C> );\n}\n\nfunction _cloneFromClause<T extends QueryClauseToken | SubSelectToken>( this:void, clauseToken:T, token:SolutionModifierToken ):T {\n\tconst modifiers:SolutionModifierToken[] = clauseToken.modifiers.concat( token );\n\treturn cloneElement( clauseToken, { modifiers } as Partial<T> );\n}\n\nfunction _cloneFromQuery( this:void, queryToken:QueryToken<QueryClauseToken>, token:SolutionModifierToken ):QueryToken<QueryClauseToken> {\n\tconst queryClause:QueryClauseToken = _cloneFromClause( queryToken.queryClause, token );\n\treturn cloneElement( queryToken, { queryClause } );\n}\n"]}