{"version":3,"sources":["clauses/decorators/finish.ts"],"names":[],"mappings":"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","file":"finish.js","sourcesContent":["import {\n\tContainer,\n\tFinishClause,\n\tgenericDecorator,\n} from \"sparqler/clauses\";\nimport {\n\tCLOSE_MULTI_BLOCK,\n\tCLOSE_MULTI_BN,\n\tCLOSE_MULTI_LIST,\n\tEMPTY_SEPARATOR,\n\tGRAPH_PATTERN_SEPARATOR,\n\tOPEN_MULTI_BLOCK,\n\tOPEN_MULTI_BN,\n\tOPEN_MULTI_LIST,\n\tPREFIX,\n\tSAME_PROPERTY_SEPARATOR,\n\tSAME_SUBJECT_SEPARATOR,\n\tWHERE,\n} from \"sparqler/patterns/tokens\";\nimport {\n\tNewLineSymbol,\n\tToken,\n\tTokenFormat,\n} from \"sparqler/tokens\";\n\n/**\n * Returns a compact SPARQL query string.\n * @returns {string}\n */\nfunction toCompactString( this:Container<FinishClause> ):string {\n\tlet ignore:number = 0;\n\treturn this._tokens.reduce( ( res, token, index, tokens ) => {\n\t\tif( ignore ) {\n\t\t\t-- ignore;\n\t\t\treturn res;\n\t\t}\n\n\t\tif( token === WHERE ) return res;\n\n\t\tlet nextToken:Token = tokens[ index + 1 ];\n\t\tif( token === PREFIX && ! this._iriResolver._prefixes.get( nextToken[ \"value\" ] ) ) {\n\t\t\tignore = 5;\n\t\t\treturn res;\n\t\t}\n\n\t\tif( nextToken === EMPTY_SEPARATOR ) nextToken = tokens[ index + 2 ];\n\t\treturn res + token.getTokenValue( TokenFormat.COMPACT, nextToken );\n\t}, \"\" );\n}\n\n/**\n * Returns a pretty SPARQL query string.\n * @returns {string}\n */\nfunction toPrettyString( this:Container<FinishClause> ):string {\n\tconst stack:{ token:Token, indentation:number, subject:number, property:number, spaces:number }[] = [];\n\tlet actual:{ token:Token, indentation:number, subject:number, property:number, spaces:number } = {\n\t\ttoken: null,\n\t\tindentation: 0,\n\t\tsubject: 0,\n\t\tproperty: 0,\n\t\tspaces: 0,\n\t};\n\n\treturn this._tokens.reduce( ( res, token, index, tokens ) => {\n\t\tlet nextToken:Token = tokens[ index + 1 ];\n\t\tlet tokenString:string = token.getTokenValue( TokenFormat.PRETTY, nextToken );\n\n\t\t// Record spaces occupied by tÂ¡he tokens\n\t\tif( actual.spaces === 0 ) {\n\t\t\tactual.subject += tokenString.length;\n\t\t\tif( tokenString.endsWith( \" \" ) ) actual.spaces ++;\n\t\t} else if( actual.spaces === 1 ) {\n\t\t\tactual.property += tokenString.length;\n\t\t\tif( tokenString.endsWith( \" \" ) ) actual.spaces ++;\n\t\t}\n\n\t\t// Check if a new block of lines\n\t\tif( [ OPEN_MULTI_BLOCK as Token, OPEN_MULTI_BN, OPEN_MULTI_LIST ].indexOf( token ) !== - 1 ) {\n\n\t\t\t// Record a new state for a block of triples\n\t\t\tstack.push( actual );\n\t\t\tactual = {\n\t\t\t\ttoken: token,\n\t\t\t\tindentation: actual.indentation + 4,\n\t\t\t\tsubject: 0,\n\t\t\t\tproperty: 0,\n\t\t\t\tspaces: token === OPEN_MULTI_BLOCK ? 0 : token === OPEN_MULTI_BN ? 1 : 2,\n\t\t\t};\n\n\t\t} else if( [ CLOSE_MULTI_LIST as Token ].indexOf( token ) !== - 1 ) {\n\t\t\tif( ! ( nextToken instanceof NewLineSymbol ) ) {\n\n\t\t\t\t// Obtain parent state\n\t\t\t\tlet parent = actual;\n\t\t\t\twhile( [ OPEN_MULTI_BLOCK as Token, OPEN_MULTI_BN, OPEN_MULTI_LIST ].indexOf( parent.token ) === - 1 )\n\t\t\t\t\tparent = stack.pop();\n\t\t\t\tstack.push( parent );\n\n\t\t\t\t// Record a new state for properties of a collection\n\t\t\t\tactual = {\n\t\t\t\t\ttoken: token,\n\t\t\t\t\tindentation: parent.indentation + 4,\n\t\t\t\t\tsubject: 0,\n\t\t\t\t\tproperty: 0,\n\t\t\t\t\tspaces: 1,\n\t\t\t\t};\n\t\t\t}\n\n\t\t} else if( [ SAME_SUBJECT_SEPARATOR as Token, SAME_PROPERTY_SEPARATOR, CLOSE_MULTI_LIST ].indexOf( token ) !== - 1 ) {\n\n\t\t\t// Obtain parent state\n\t\t\tlet parent = actual;\n\t\t\twhile( [ OPEN_MULTI_BLOCK as Token, OPEN_MULTI_BN, OPEN_MULTI_LIST, CLOSE_MULTI_LIST, CLOSE_MULTI_BN ].indexOf( parent.token ) === - 1 )\n\t\t\t\tparent = stack.pop();\n\t\t\tstack.push( parent );\n\n\t\t\t// Record a new state for same subject properties\n\t\t\tif( token === SAME_SUBJECT_SEPARATOR ) {\n\t\t\t\tactual = {\n\t\t\t\t\ttoken: token,\n\t\t\t\t\tindentation: parent.indentation + actual.subject,\n\t\t\t\t\tsubject: actual.subject,\n\t\t\t\t\tproperty: 0,\n\t\t\t\t\tspaces: 1,\n\t\t\t\t};\n\n\t\t\t\t// Record a new state for a list of objects of a property\n\t\t\t} else if( token === SAME_PROPERTY_SEPARATOR ) {\n\t\t\t\tactual = {\n\t\t\t\t\ttoken: token,\n\t\t\t\t\tindentation: parent.indentation + actual.subject + actual.property,\n\t\t\t\t\tsubject: actual.subject,\n\t\t\t\t\tproperty: actual.property,\n\t\t\t\t\tspaces: 2,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Returns still a block state\n\t\t} else if( token === GRAPH_PATTERN_SEPARATOR ) {\n\t\t\twhile( actual.token !== OPEN_MULTI_BLOCK ) actual = stack.pop();\n\t\t\tactual.spaces = 0;\n\t\t\tactual.subject = 0;\n\t\t\tactual.property = 0;\n\t\t}\n\n\t\tif( nextToken === CLOSE_MULTI_BLOCK ) {\n\t\t\twhile( actual.token !== OPEN_MULTI_BLOCK ) actual = stack.pop();\n\t\t\tactual = stack.pop();\n\t\t} else if( nextToken === CLOSE_MULTI_BN ) {\n\t\t\twhile( actual.token !== OPEN_MULTI_BN ) actual = stack.pop();\n\t\t\tactual = stack.pop();\n\t\t} else if( nextToken === CLOSE_MULTI_LIST ) {\n\t\t\twhile( actual.token !== OPEN_MULTI_LIST ) actual = stack.pop();\n\t\t\tactual = stack.pop();\n\t\t}\n\n\t\tif( tokenString.endsWith( \"\\n\" ) ) {\n\t\t\ttokenString = tokenString + \" \".repeat( actual.indentation );\n\t\t}\n\n\t\treturn res + tokenString;\n\t}, \"\" );\n}\n\nexport function finishDecorator<W extends object>( container:Container<FinishClause>, object:W ):W & FinishClause {\n\treturn genericDecorator( {\n\t\ttoCompactString,\n\t\ttoPrettyString,\n\t\ttoString: toPrettyString,\n\t}, container, object );\n}\n"]}