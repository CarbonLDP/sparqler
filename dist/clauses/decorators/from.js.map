{"version":3,"sources":["clauses/decorators/from.ts"],"names":[],"mappings":";;AAKA,wDAAuD;AACvD,0DAA6D;AAC7D,gDAA0D;AAC1D,mDAGkC;AAIlC,eAAwC,IAAiB,EAAE,MAAc,EAAE,GAAU;IACpF,MAAM,CAAC,IAAI,OAAX,MAAM,EAAU,IAAI,CAAC,YAAY,CAAC,OAAO,CAAE,GAAG,CAAE,EAAG;IAEnD,IAAM,SAAS,GAAgB,IAAI,qBAAS,CAAK,IAAI,EAAE,MAAM,CAAE,CAAC;IAChE,MAAM,CAAC,2BAAc,CAAS,SAAS,EAAE,EAAE,CAAE,CAAC;AAC/C,CAAC;AAED,cAA0D,GAAU;IACnE,MAAM,CAAC,KAAK,CAAK,IAAI,EAAE,CAAE,aAAI,CAAE,EAAE,GAAG,CAAE,CAAC;AACxC,CAAC;AAED,mBAA+D,GAAU;IACxE,MAAM,CAAC,KAAK,CAAK,IAAI,EAAE,CAAE,aAAI,EAAE,cAAK,CAAE,EAAE,GAAG,CAAE,CAAC;AAC/C,CAAC;AAED,uBAAyE,SAAsB,EAAE,MAAQ;IACxG,MAAM,CAAC,wBAAgB,CAAE,EAAE,IAAI,MAAA,EAAE,SAAS,WAAA,EAAE,EAAE,SAAS,EAAE,2BAAc,CAAQ,SAAS,EAAE,MAAM,CAAE,CAAE,CAAC;AACtG,CAAC;AAFD,sCAEC","file":"from.js","sourcesContent":["import {\n\tFinishClause,\n\tFromClause,\n\tWhereClause,\n} from \"sparqler/clauses\";\nimport { Container } from \"sparqler/clauses/Container\";\nimport { whereDecorator } from \"sparqler/clauses/decorators\";\nimport { genericDecorator } from \"sparqler/clauses/utils\";\nimport {\n\tFROM,\n\tNAMED,\n} from \"sparqler/patterns/tokens\";\nimport { Token } from \"sparqler/tokens\";\n\n\nfunction _from<T extends FinishClause>( self:Container<T>, tokens:Token[], iri:string ):WhereClause<T> {\n\ttokens.push( ...self._iriResolver.resolve( iri ) );\n\n\tconst container:Container<T> = new Container<T>( self, tokens );\n\treturn whereDecorator<T, {}>( container, {} );\n}\n\nfunction from<T extends FinishClause>( this:Container<T>, iri:string ):WhereClause<T> {\n\treturn _from<T>( this, [ FROM ], iri );\n}\n\nfunction fromNamed<T extends FinishClause>( this:Container<T>, iri:string ):WhereClause<T> {\n\treturn _from<T>( this, [ FROM, NAMED ], iri );\n}\n\nexport function fromDecorator<T extends FinishClause, W extends object>( container:Container<T>, object:W ):W & FromClause<T> {\n\treturn genericDecorator( { from, fromNamed }, container, whereDecorator<T, W>( container, object ) );\n}\n"]}