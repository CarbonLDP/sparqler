{"version":3,"sources":["clauses/decorators/group.ts"],"names":[],"mappings":";;AAKA,wDAAuD;AACvD,0DAA8D;AAC9D,gDAA0D;AAE1D,mDAGkC;AAClC,0CAGyB;AAGzB,iBAA4E,YAAmB;IAC9F,IAAM,MAAM,GAAW,CAAE,cAAK,EAAE,WAAE,EAAE,IAAI,sBAAa,CAAE,YAAY,CAAE,CAAE,CAAC;IAExE,IAAM,SAAS,GAAgB,IAAI,qBAAS,CAAK,IAAI,EAAE,MAAM,CAAE,CAAC;IAChE,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAmB,SAAS,EAAE,4BAAe,CAAS,SAAS,EAAE,EAAE,CAAE,CAAE,CAAC;AACrG,CAAC;AAED,wBAAyF,SAAsB,EAAE,MAAQ;IACxH,MAAM,CAAC,wBAAgB,CAAE,EAAE,OAAO,SAAA,EAAE,EAAE,SAAS,EAAE,4BAAe,CAAQ,SAAS,EAAE,MAAM,CAAE,CAAE,CAAC;AAC/F,CAAC;AAFD,wCAEC","file":"group.js","sourcesContent":["import {\n\tFinishClause,\n\tGroupClause,\n\tHavingClause,\n} from \"sparqler/clauses\";\nimport { Container } from \"sparqler/clauses/Container\";\nimport { havingDecorator } from \"sparqler/clauses/decorators\";\nimport { genericDecorator } from \"sparqler/clauses/utils\";\nimport { GraphPattern } from \"sparqler/patterns\";\nimport {\n\tBY,\n\tGROUP,\n} from \"sparqler/patterns/tokens\";\nimport {\n\tStringLiteral,\n\tToken,\n} from \"sparqler/tokens\";\n\n\nfunction groupBy<T extends FinishClause | GraphPattern>( this:Container<T>, rawCondition:string ):HavingClause<T> & T {\n\tconst tokens:Token[] = [ GROUP, BY, new StringLiteral( rawCondition ) ];\n\n\tconst container:Container<T> = new Container<T>( this, tokens );\n\treturn this._finishDecorator<HavingClause<T>>( container, havingDecorator<T, {}>( container, {} ) );\n}\n\nexport function groupDecorator<T extends FinishClause | GraphPattern, W extends object>( container:Container<T>, object:W ):W & GroupClause<T> {\n\treturn genericDecorator( { groupBy }, container, havingDecorator<T, W>( container, object ) );\n}\n"]}