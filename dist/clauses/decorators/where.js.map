{"version":3,"sources":["clauses/decorators/where.ts"],"names":[],"mappings":";;AAAA,4CAM0B;AAC1B,0DAA6D;AAC7D,wDAAuD;AACvD,8CAG2B;AAC3B,mDAAiD;AAEjD,oDAAyD;AAGzD,eAA0E,eAA4E;IACrJ,IAAM,WAAW,GAAe,IAAI,yBAAW,CAAE,IAAI,CAAC,YAAY,CAAE,CAAC;IACrE,IAAM,MAAM,GAAiC,eAAe,CAAE,IAAI,yBAAc,CAAE,WAAW,CAAE,CAAE,CAAC;IAClG,IAAM,MAAM,IAAa,cAAK,SAAK,yBAAc,CAAE,MAAM,CAAE,CAAE,CAAC;IAE9D,IAAM,SAAS,GAAgB,IAAI,mBAAS,CAAK,IAAI,EAAE,MAAM,EAAE,WAAW,CAAE,CAAC;IAC7E,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAkB,SAAS,EAAE,2BAAc,CAAS,SAAS,EAAE,EAAE,CAAE,CAAE,CAAC;AACnG,CAAC;AAED,wBAAyF,SAAsB,EAAE,MAAQ;IACxH,MAAM,CAAC,0BAAgB,CAAE,EAAE,KAAK,OAAA,EAAE,EAAE,SAAS,EAAE,2BAAc,CAAQ,SAAS,EAAE,MAAM,CAAE,CAAE,CAAC;AAC5F,CAAC;AAFD,wCAEC","file":"where.js","sourcesContent":["import {\n\tContainer,\n\tFinishClause,\n\tgenericDecorator,\n\tGroupClause,\n\tWhereClause,\n} from \"sparqler/clauses\";\nimport { groupDecorator } from \"sparqler/clauses/decorators\";\nimport { IRIResolver } from \"sparqler/iri/IRIResolver\";\nimport {\n\tGraphPattern,\n\tPatternBuilder,\n} from \"sparqler/patterns\";\nimport { WHERE } from \"sparqler/patterns/tokens\";\nimport { Token } from \"sparqler/tokens\";\nimport { getBlockTokens } from \"sparqler/utils/Patterns\";\n\n\nfunction where<T extends FinishClause | GraphPattern>( this:Container<T>, patternFunction:( builder:PatternBuilder ) => GraphPattern | GraphPattern[ ] ):GroupClause<T> & T {\n\tconst iriResolver:IRIResolver = new IRIResolver( this._iriResolver );\n\tconst result:GraphPattern | GraphPattern[] = patternFunction( new PatternBuilder( iriResolver ) );\n\tconst tokens:Token[] = [ WHERE, ...getBlockTokens( result ) ];\n\n\tconst container:Container<T> = new Container<T>( this, tokens, iriResolver );\n\treturn this._finishDecorator<GroupClause<T>>( container, groupDecorator<T, {}>( container, {} ) );\n}\n\nexport function whereDecorator<T extends FinishClause | GraphPattern, W extends object>( container:Container<T>, object:W ):W & WhereClause<T> {\n\treturn genericDecorator( { where }, container, groupDecorator<T, W>( container, object ) );\n}\n"]}