{"version":3,"sources":["clauses/utils.ts"],"names":[],"mappings":";;AAAA,sBAAgD,OAAS,EAAE,SAAyB;IAAzB,0BAAA,EAAA,cAAyB;IACnF,IAAM,KAAK,GAAK,MAAM,CAAC,MAAM,CAAE,MAAM,CAAC,cAAc,CAAE,OAAO,CAAE,CAAE,CAAC;IAElE,OAAO,MAAM;SACX,MAAM,CAAE,KAAK,EAAE,OAAO,EAAE,SAAS,CAAE,CAAC;AACvC,CAAC;AALD,oCAKC;AAED,uBAA8C,SAAW,EAAE,SAAoB;IAC9E,IAAM,KAAK,GAAK,MAAM,CAAC,MAAM,CAAE,MAAM,CAAC,cAAc,CAAE,SAAS,CAAE,CAAE,CAAC;IAEpE,MAAM;SACJ,IAAI,CAAE,SAAS,CAAE;SACjB,OAAO,CAAE,UAAA,GAAG;QACZ,IAAI,GAAG,IAAI,SAAS,EAAG;YACtB,IAAM,KAAK,GAAO,SAAS,CAAE,GAAG,CAAE,CAAC;YAEnC,IAAI,KAAK,KAAK,KAAK,CAAC,EAAG;gBACtB,KAAK,CAAE,GAAG,CAAE,GAAG,KAAK,CAAC;gBACrB,OAAO;aACP;SACD;QAED,KAAK,CAAE,GAAG,CAAE,GAAG,SAAS,CAAE,GAAG,CAAE,CAAC;IACjC,CAAC,CAAE,CAAC;IAEL,OAAO,KAAK,CAAC;AACd,CAAC;AAnBD,sCAmBC","file":"utils.js","sourcesContent":["export function cloneElement<T extends object>( element:T, newValues:Partial<T> = {} ):T {\n\tconst clone:T = Object.create( Object.getPrototypeOf( element ) );\n\n\treturn Object\n\t\t.assign( clone, element, newValues );\n}\n\nexport function _cloneElement<T extends any>( container:T, newValues:Partial<T> ):T {\n\tconst clone:T = Object.create( Object.getPrototypeOf( container ) );\n\n\tObject\n\t\t.keys( container )\n\t\t.forEach( key => {\n\t\t\tif( key in newValues ) {\n\t\t\t\tconst value:any = newValues[ key ];\n\n\t\t\t\tif( value !== void 0 ) {\n\t\t\t\t\tclone[ key ] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tclone[ key ] = container[ key ];\n\t\t} );\n\n\treturn clone;\n}\n"]}