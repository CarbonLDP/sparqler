{"version":3,"sources":["index.ts"],"names":[],"mappings":";;AAAA,iDAAgD;AAChD,mDAAsD;AAWtD;IAEC,kBAAa,eAAmC;QAC/C,IAAM,SAAS,GAAgB,IAAI,qBAAS,CAAK,eAAe,CAAE,CAAC;QACnE,OAAO,2BAAc,CAAS,SAAS,EAAE,IAAI,CAAE,CAAC;IACjD,CAAC;IAEF,eAAC;AAAD,CAPA,AAOC,IAAA;AAPY,4BAAQ;AASrB,kBAAe,QAAQ,CAAC","file":"index.js","sourcesContent":["import { Container } from \"./clauses/Container\";\nimport { queryDecorator } from \"./clauses/decorators\";\nimport { FinishClause } from \"./clauses/FinishClause\";\nimport { QueryClause } from \"./clauses/QueryClause\";\n\n\nexport interface FinishDecorator<T> extends Function {\n\t<W extends object>( container:Container<T & FinishClause>, object:W ):T & W & FinishClause;\n}\n\nexport interface SPARQLER<T extends FinishClause = FinishClause> extends QueryClause<T> {}\n\nexport class SPARQLER<T extends FinishClause = FinishClause> {\n\n\tconstructor( finishDecorator?:FinishDecorator<T> ) {\n\t\tconst container:Container<T> = new Container<T>( finishDecorator );\n\t\treturn queryDecorator<T, {}>( container, this );\n\t}\n\n}\n\nexport default SPARQLER;\n"]}