{"version":3,"sources":["index.ts"],"names":[],"mappings":";;AAAA,iDAAgD;AAChD,mDAAsD;AACtD,uDAAsD;AACtD,qDAAoE;AAIpE,oDAAmD;AACnD,gEAA+D;AAC/D,mCAAsC;AAStC;IAEC,kBAAa,eAAmC;QAC/C,IAAM,SAAS,GAAgB,IAAI,qBAAS,CAAK,eAAe,CAAE,CAAC;QACnE,OAAO,2BAAc,CAAS,SAAS,EAAE,IAAI,CAAE,CAAC;IACjD,CAAC;IAEF,eAAC;AAAD,CAPA,AAOC,IAAA;AAPY,4BAAQ;AASrB,kBAAe,QAAQ,CAAC;AAOxB;IACC,mBAAa,mBAA4F;QAA5F,oCAAA,EAAA,sBAA4C,2BAAY,CAAC,UAAmC;QAExG,IAAM,SAAS,GAA8B,IAAI,uCAAkB,CAAE;YACpE,WAAW,EAAE,IAAI,2BAAY,EAAE;YAC/B,WAAW,EAAE,IAAI,mBAAU,CAAE,KAAK,CAAC,CAAE;YACrC,yBAAyB,EAAE,mBAAmB;SAC9C,CAAE,CAAC;QAEJ,OAAO,yBAAY,CAAC,UAAU,CAAE,SAAS,EAAE,IAAI,CAAE,CAAC;IACnD,CAAC;IACF,gBAAC;AAAD,CAXA,AAWC,IAAA;AAXY,8BAAS","file":"index.js","sourcesContent":["import { Container } from \"./clauses/Container\";\nimport { queryDecorator } from \"./clauses/decorators\";\nimport { FinishClause } from \"./clauses/FinishClause\";\nimport { QueryClause as QueryClause2 } from \"./clauses/QueryClause\";\nimport { QueryClause } from \"./clauses/interfaces\";\nimport { Container2 } from \"./data/Container2\";\nimport { Factory } from \"./data/Factory\";\nimport { IRIResolver2 } from \"./data/IRIResolver2\";\nimport { QueryUnitContainer } from \"./data/QueryUnitContainer\";\nimport { QueryToken } from \"./tokens\";\n\n\nexport interface FinishDecorator<T> extends Function {\n\t<W extends object>( container:Container<T & FinishClause>, object:W ):T & W & FinishClause;\n}\n\nexport interface SPARQLER<T extends FinishClause = FinishClause> extends QueryClause<T> {}\n\nexport class SPARQLER<T extends FinishClause = FinishClause> {\n\n\tconstructor( finishDecorator?:FinishDecorator<T> ) {\n\t\tconst container:Container<T> = new Container<T>( finishDecorator );\n\t\treturn queryDecorator<T, {}>( container, this );\n\t}\n\n}\n\nexport default SPARQLER;\n\n\nexport type FinishFactory<T extends FinishClause> = Factory<Container2<QueryToken>, T>;\n\nexport interface SPARQLER2<SELECT extends FinishClause = FinishClause> extends QueryClause2<SELECT> {}\n\nexport class SPARQLER2<SELECT extends FinishClause = FinishClause> {\n\tconstructor( finishSelectFactory:FinishFactory<SELECT> = FinishClause.createFrom as FinishFactory<SELECT> ) {\n\n\t\tconst container:QueryUnitContainer<SELECT> = new QueryUnitContainer( {\n\t\t\tiriResolver: new IRIResolver2(),\n\t\t\ttargetToken: new QueryToken( void 0 ),\n\t\t\tselectFinishClauseFactory: finishSelectFactory,\n\t\t} );\n\n\t\treturn QueryClause2.createFrom( container, this );\n\t}\n}\n"]}