{"version":3,"sources":["patterns/PatternBuilder.ts"],"names":[],"mappings":"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","file":"PatternBuilder.js","sourcesContent":["import { Container } from \"./../clauses/Container\";\nimport {\n\tselectDecorator,\n\tsubFinishDecorator,\n} from \"./../clauses/decorators\";\nimport {\n\tSubSelectClause,\n\tSubWhereClause,\n} from \"./../clauses/interfaces\";\nimport { IRIResolver } from \"./../iri/IRIResolver\";\nimport {\n\tGraphPattern,\n\tMultipleValuesPattern,\n\tNotTriplesPatternBuilder,\n\tSingleValuesPattern,\n\tSupportedNativeTypes,\n\tTriplesNodePattern,\n\tTriplesPatternBuilder,\n} from \"./interfaces\";\nimport { NotTriplesPattern } from \"./notTriples/NotTriplesPattern\";\nimport { ValuesPattern } from \"./notTriples/ValuesPattern\";\nimport {\n\tAS,\n\tBIND,\n\tCLOSE_SINGLE_LIST,\n\tFILTER,\n\tGRAPH,\n\tMINUS,\n\tOPEN_SINGLE_LIST,\n\tOPTIONAL,\n\tSERVICE,\n\tSILENT,\n\tUNION,\n} from \"./tokens\";\nimport { BlankNode } from \"./triples/BlankNode\";\nimport { Collection } from \"./triples/Collection\";\nimport {\n\tBooleanLiteral,\n\tLiteral,\n\tNumericLiteral,\n\tRDFLiteral,\n} from \"./triples/Literals\";\nimport { Resource } from \"./triples/Resource\";\nimport { Variable } from \"./triples/Variable\";\nimport { StringLiteral } from \"./../tokens/StringLiteral\";\nimport { Token } from \"./../tokens/Token\";\nimport { getBlockTokens } from \"./../utils/Patterns\";\n\nexport type Undefined = \"UNDEF\";\n\nexport class PatternBuilder implements TriplesPatternBuilder,\n                                       NotTriplesPatternBuilder,\n                                       SubSelectClause {\n\n\tpublic static get undefined():Undefined { return \"UNDEF\"; };\n\n\tpublic get undefined():Undefined { return PatternBuilder.undefined; };\n\n\tprivate iriResolver:IRIResolver;\n\n\tconstructor( iriResolver:IRIResolver ) {\n\t\tthis.iriResolver = iriResolver;\n\t\tselectDecorator( new Container( subFinishDecorator ), this );\n\t}\n\n\tresource( iri:string ):Resource {\n\t\treturn new Resource( this.iriResolver, iri );\n\t}\n\n\tvar( name:string ):Variable {\n\t\treturn new Variable( this.iriResolver, name );\n\t}\n\n\tliteral( value:string ):RDFLiteral;\n\tliteral( value:number ):NumericLiteral;\n\tliteral( value:boolean ):BooleanLiteral;\n\tliteral( value ):any {\n\t\tif( typeof value === \"string\" || value instanceof String )\n\t\t\treturn new RDFLiteral( this.iriResolver, value as string );\n\n\t\tif( typeof value === \"number\" || value instanceof Number )\n\t\t\treturn new NumericLiteral( this.iriResolver, value as number );\n\n\t\tif( typeof value === \"boolean\" || value instanceof Boolean )\n\t\t\treturn new BooleanLiteral( this.iriResolver, value as boolean );\n\n\t\tthrow new Error( \"No valid value of a literal was provided.\" );\n\t}\n\n\tcollection( ...values:(SupportedNativeTypes | Resource | Variable | Literal | TriplesNodePattern)[] ):Collection {\n\t\tif( values.length === 0 ) throw Error( \"The collection needs at least one value.\" );\n\t\treturn new Collection( this.iriResolver, values );\n\t}\n\n\tblankNode():BlankNode {\n\t\treturn new BlankNode( this.iriResolver );\n\t}\n\n\tgraph( iri:string, pattern:GraphPattern ):NotTriplesPattern;\n\tgraph( iri:string, patterns:GraphPattern[] ):NotTriplesPattern;\n\tgraph( variable:Variable, pattern:GraphPattern ):NotTriplesPattern;\n\tgraph( variable:Variable, patterns:GraphPattern[] ):NotTriplesPattern;\n\tgraph( iriOrVariable, patterns ):NotTriplesPattern {\n\t\tlet graph:Token[] = ( typeof iriOrVariable === \"string\" )\n\t\t\t? this.iriResolver.resolve( iriOrVariable )\n\t\t\t: iriOrVariable.getSelfTokens();\n\n\t\tlet patternTokens:Token[] = getBlockTokens( patterns );\n\t\treturn new NotTriplesPattern( [ GRAPH, ...graph, ...patternTokens ] );\n\t}\n\n\toptional( pattern:GraphPattern ):NotTriplesPattern;\n\toptional( patterns:GraphPattern[] ):NotTriplesPattern;\n\toptional( patterns ):NotTriplesPattern {\n\t\tlet patternTokens:Token[] = getBlockTokens( patterns );\n\n\t\treturn new NotTriplesPattern( [ OPTIONAL, ...patternTokens ] );\n\t}\n\n\tunion( pattern1:GraphPattern, pattern2:GraphPattern ):NotTriplesPattern;\n\tunion( pattern1:GraphPattern, patterns2:GraphPattern[] ):NotTriplesPattern;\n\tunion( patterns1:GraphPattern[], pattern2:GraphPattern ):NotTriplesPattern;\n\tunion( patterns1:GraphPattern[], patterns2:GraphPattern[] ):NotTriplesPattern;\n\tunion( patterns1, patterns2 ):NotTriplesPattern {\n\t\tlet leftPatternTokens:Token[] = getBlockTokens( patterns1 );\n\t\tlet rightPatternTokens:Token[] = getBlockTokens( patterns2 );\n\n\t\treturn new NotTriplesPattern( [ ...leftPatternTokens, UNION, ...rightPatternTokens ] );\n\t}\n\n\tminus( pattern:GraphPattern ):NotTriplesPattern;\n\tminus( firstPattern:GraphPattern, ...restPatterns:GraphPattern[] ):NotTriplesPattern;\n\tminus( ...patterns:GraphPattern[] ):NotTriplesPattern {\n\t\tlet patternTokens:Token[] = getBlockTokens( patterns );\n\n\t\treturn new NotTriplesPattern( [ MINUS, ...patternTokens ] );\n\t}\n\n\tvalues( variable:Variable ):SingleValuesPattern;\n\tvalues( ...variables:Variable[] ):MultipleValuesPattern;\n\tvalues( ...variables:Variable[] ):SingleValuesPattern | MultipleValuesPattern {\n\t\treturn new ValuesPattern( this.iriResolver, variables );\n\t}\n\n\tservice( resource:string | Resource | Variable, patterns:GraphPattern | GraphPattern[] ):NotTriplesPattern {\n\t\tconst serviceTokens:Token[] = typeof resource === \"string\" ?\n\t\t\tthis.iriResolver.resolve( resource ) :\n\t\t\tresource.getSelfTokens();\n\n\t\tconst patternTokens:Token[] = getBlockTokens( patterns );\n\t\treturn new NotTriplesPattern( [ SERVICE, ...serviceTokens, ...patternTokens ] );\n\t}\n\n\tserviceSilent( resource:string | Resource | Variable, patterns:GraphPattern | GraphPattern[] ):NotTriplesPattern {\n\t\tconst serviceTokens:Token[] = typeof resource === \"string\" ?\n\t\t\tthis.iriResolver.resolve( resource ) :\n\t\t\tresource.getSelfTokens();\n\n\t\tconst patternTokens:Token[] = getBlockTokens( patterns );\n\t\treturn new NotTriplesPattern( [ SERVICE, SILENT, ...serviceTokens, ...patternTokens ] );\n\t}\n\n\tbind( rawExpression:string, variable:string | Variable ):NotTriplesPattern {\n\t\tvariable = typeof variable === \"string\" ? this.var( variable ) : variable;\n\t\tconst patternTokens:Token[] = [ BIND, OPEN_SINGLE_LIST, new StringLiteral( rawExpression ), AS, ...variable.getSelfTokens(), CLOSE_SINGLE_LIST ];\n\t\treturn new NotTriplesPattern( patternTokens );\n\t}\n\n\tfilter( rawConstraint:string ):NotTriplesPattern {\n\t\treturn new NotTriplesPattern( [ FILTER, new StringLiteral( rawConstraint ) ] );\n\t}\n\n\t// SubSelect Clauses methods, decorated in constructor\n\tselect:( ...variables:string[] ) => SubWhereClause;\n\tselectDistinct:( ...variables:string[] ) => SubWhereClause;\n\tselectReduced:( ...variables:string[] ) => SubWhereClause;\n\tselectAll:() => SubWhereClause;\n\tselectAllDistinct:() => SubWhereClause;\n\tselectAllReduced:() => SubWhereClause;\n\n}\n\nexport default PatternBuilder;\n"]}