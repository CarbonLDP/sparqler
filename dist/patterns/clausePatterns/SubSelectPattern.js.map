{"version":3,"sources":["patterns/clausePatterns/SubSelectPattern.ts"],"names":[],"mappings":";;AAAA,sDAAqD;AAErD,gEAA+D;AAC/D,8DAA6D;AAC7D,qDAAoD;AAmBpD,qBAAuD,SAAW,EAAE,QAAgC;IACnG,OAAO;QAAE,mBAAqB;aAArB,UAAqB,EAArB,qBAAqB,EAArB,IAAqB;YAArB,8BAAqB;;QAC7B,IAAM,WAAW,GAAkB,IAAI,+BAAc,CAAE,QAAQ,CAAE,CAAC;QAClE,IAAI,SAAS,CAAC,MAAM;YAAG,WAAW,CAAC,WAAW,OAAvB,WAAW,EAAiB,SAAS,CAAC,GAAG,CAAE,UAAA,CAAC,IAAI,OAAA,IAAI,6BAAa,CAAE,CAAC,CAAE,EAAtB,CAAsB,CAAE,EAAG;QAElG,IAAM,YAAY,GAAG,IAAI,uBAAU,CAAE;YACpC,WAAW,EAAE,SAAS,CAAC,WAAW;YAClC,WAAW,aAAA;SACX,CAAE,CAAC;QACJ,OAAO,iCAAe,CAAC,UAAU,CAAE,YAAY,EAAE,EAAE,CAAE,CAAC;IACvD,CAAC,CAAC;AACH,CAAC;AAMY,QAAA,gBAAgB,GAAG;IAC/B,UAAU,EAAV,UAA+D,SAAW,EAAE,MAAQ;QACnF,OAAO,MAAM,CAAC,MAAM,CAAE,MAAM,EAAE;YAC7B,MAAM,EAAE,WAAW,CAAE,SAAS,CAAE;YAChC,cAAc,EAAE,WAAW,CAAE,SAAS,EAAE,UAAU,CAAE;YACpD,aAAa,EAAE,WAAW,CAAE,SAAS,EAAE,SAAS,CAAE;YAClD,SAAS,EAAE,cAAM,OAAA,WAAW,CAAE,SAAS,CAAE,EAAE,EAA1B,CAA0B;YAC3C,iBAAiB,EAAE,cAAM,OAAA,WAAW,CAAE,SAAS,EAAE,UAAU,CAAE,EAAE,EAAtC,CAAsC;YAC/D,gBAAgB,EAAE,cAAM,OAAA,WAAW,CAAE,SAAS,EAAE,SAAS,CAAE,EAAE,EAArC,CAAqC;SAC7D,CAAE,CAAC;IACL,CAAC;CACD,CAAC","file":"SubSelectPattern.js","sourcesContent":["import { Container2 } from \"./../../data/Container2\";\nimport { TokenNode } from \"./../../tokens\";\nimport { SubSelectToken } from \"./../../tokens/SubSelectToken\";\nimport { VariableToken } from \"./../../tokens/VariableToken\";\nimport { SubWherePattern } from \"./SubWherePattern\";\n\n\n/**\n * @todo\n */\nexport interface SubSelectPattern {\n\tselect( ...variables:string[] ):SubWherePattern;\n\tselectDistinct( ...variables:string[] ):SubWherePattern;\n\tselectReduced( ...variables:string[] ):SubWherePattern;\n\tselectAll():SubWherePattern;\n\tselectAllDistinct():SubWherePattern;\n\tselectAllReduced():SubWherePattern;\n}\n\n\n/**\n * @todo\n */\nfunction getSelectFn<C extends Container2<TokenNode>>( container:C, modifier?:\"DISTINCT\" | \"REDUCED\" ):SubSelectPattern[ \"select\" ] {\n\treturn ( ...variables:string[] ) => {\n\t\tconst targetToken:SubSelectToken = new SubSelectToken( modifier );\n\t\tif( variables.length ) targetToken.addVariable( ...variables.map( x => new VariableToken( x ) ) );\n\n\t\tconst newContainer = new Container2( {\n\t\t\tiriResolver: container.iriResolver,\n\t\t\ttargetToken\n\t\t} );\n\t\treturn SubWherePattern.createFrom( newContainer, {} );\n\t};\n}\n\n\n/**\n * @todo\n */\nexport const SubSelectPattern = {\n\tcreateFrom<C extends Container2<TokenNode>, O extends object>( container:C, object:O ):O & SubSelectPattern {\n\t\treturn Object.assign( object, {\n\t\t\tselect: getSelectFn( container ),\n\t\t\tselectDistinct: getSelectFn( container, \"DISTINCT\" ),\n\t\t\tselectReduced: getSelectFn( container, \"REDUCED\" ),\n\t\t\tselectAll: () => getSelectFn( container )(),\n\t\t\tselectAllDistinct: () => getSelectFn( container, \"DISTINCT\" )(),\n\t\t\tselectAllReduced: () => getSelectFn( container, \"REDUCED\" )(),\n\t\t} );\n\t},\n};\n"]}