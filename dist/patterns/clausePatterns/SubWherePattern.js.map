{"version":3,"sources":["patterns/clausePatterns/SubWherePattern.ts"],"names":[],"mappings":";;AACA,4CAAkD;AAElD,wDAAuD;AACvD,yDAAwD;AAExD,6DAA4D;AAc5D,SAAS,UAAU,CAAE,SAAoC;IACxD,OAAO,UAAE,QAA4B;;QACpC,IAAM,KAAK,GAAc,IAAI,uBAAU,EAAE,CAAC;QAC1C,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAE,QAAQ,CAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAE,QAAQ,CAAE,CAAC;QAC/D,CAAA,KAAA,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAA,CAAC,IAAI,WAAK,QAAQ,CAAC,GAAG,CAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,UAAU,EAAE,EAAd,CAAc,CAAE,EAAG;QAE3E,IAAM,WAAW,GAAkB,oBAAY,CAAE,SAAS,CAAC,WAAW,EAAE,EAAE,KAAK,OAAA,EAAE,CAAE,CAAC;QACpF,IAAM,YAAY,GAAG,oBAAY,CAAE,SAAS,EAAE,EAAE,WAAW,aAAA,EAAE,CAAE,CAAC;QAEhE,IAAM,WAAW,GAAoC,yBAAW,CAAC,UAAU,CAAE,yCAAmB,CAAC,UAAU,EAAE,YAAY,EAAE,EAAE,CAAE,CAAC;QAChI,OAAO,yCAAmB,CAAC,UAAU,CAAE,YAAY,EAAE,WAAW,CAAE,CAAC;IACpE,CAAC,CAAC;AACH,CAAC;AAMY,QAAA,eAAe,GAAG;IAC9B,UAAU,EAAV,UAAoE,SAAW,EAAE,MAAQ;QACxF,OAAO,MAAM,CAAC,MAAM,CAAE,MAAM,EAAE;YAC7B,KAAK,EAAE,UAAU,CAAE,SAAS,CAAE;SAC9B,CAAE,CAAC;IACL,CAAC;CACD,CAAC","file":"SubWherePattern.js","sourcesContent":["import { Container2 } from \"./../../data/Container2\";\nimport { cloneElement } from \"./../../data/utils\";\nimport { SubSelectToken } from \"./../../tokens/SubSelectToken\";\nimport { WhereToken } from \"./../../tokens/WhereToken\";\nimport { GroupClause } from \"../../clauses/GroupClause\";\nimport { Pattern } from \"../Pattern\";\nimport { FinishClausePattern } from \"./FinishClausePattern\";\n\n\n/**\n * @todo\n */\nexport interface SubWherePattern {\n\twhere( patterns:Pattern | Pattern[] ):GroupClause<FinishClausePattern> & FinishClausePattern;\n}\n\n\n/**\n * @todo\n */\nfunction getWhereFn( container:Container2<SubSelectToken> ):SubWherePattern[ \"where\" ] {\n\treturn ( patterns:Pattern | Pattern[] ) => {\n\t\tconst where:WhereToken = new WhereToken();\n\t\tpatterns = Array.isArray( patterns ) ? patterns : [ patterns ];\n\t\twhere.groupPattern.patterns.push( ...patterns.map( x => x.getPattern() ) );\n\n\t\tconst targetToken:SubSelectToken = cloneElement( container.targetToken, { where } );\n\t\tconst newContainer = cloneElement( container, { targetToken } );\n\n\t\tconst groupClause:GroupClause<FinishClausePattern> = GroupClause.createFrom( FinishClausePattern.createFrom, newContainer, {} );\n\t\treturn FinishClausePattern.createFrom( newContainer, groupClause );\n\t};\n}\n\n\n/**\n * @todo\n */\nexport const SubWherePattern = {\n\tcreateFrom<C extends Container2<SubSelectToken>, O extends object>( container:C, object:O ):O & SubWherePattern {\n\t\treturn Object.assign( object, {\n\t\t\twhere: getWhereFn( container ),\n\t\t} );\n\t},\n};"]}