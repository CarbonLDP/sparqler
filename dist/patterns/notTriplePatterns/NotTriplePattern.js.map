{"version":3,"sources":["patterns/notTriplePatterns/NotTriplePattern.ts"],"names":[],"mappings":";;AAIA,sCAAqC;AAaxB,QAAA,gBAAgB,GAczB;IACH,UAAU,EAAE,iBAAO,CAAC,UAAU;CAC9B,CAAC","file":"NotTriplePattern.js","sourcesContent":["import { Container } from \"../../data/Container\";\n\nimport { NotTripleToken } from \"../../tokens/NotTripleToken\";\n\nimport { Pattern } from \"../Pattern\";\n\n\n/**\n * Object that contains a pattern made from a non triple statement.\n */\nexport interface NotTriplePattern<T extends NotTripleToken = NotTripleToken> extends Pattern<T> {\n}\n\n\n/**\n * Constant with utils for {@link NotTriplePattern} objects.\n */\nexport const NotTriplePattern:{\n\t/**\n\t * Factory function that allows to crete a {@link NotTriplePattern}\n\t * from the {@param object} provided.\n\t *\n\t * @param container The related container with the data for the\n\t * {@link NotTriplePattern} statement.\n\t * @param object The base base from where to create the\n\t * {@link NotTriplePattern} statement.\n\t *\n\t * @return The {@link NotTriplePattern} statement created from the\n\t * {@param object} provided.\n\t */\n\tcreateFrom<T extends NotTripleToken, C extends Container<T>, O extends object>( container:C, object:O ):O & NotTriplePattern<T>;\n} = {\n\tcreateFrom: Pattern.createFrom,\n};\n"]}