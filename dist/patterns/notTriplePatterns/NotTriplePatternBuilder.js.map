{"version":3,"sources":["patterns/notTriplePatterns/NotTriplePatternBuilder.ts"],"names":[],"mappings":"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","file":"NotTriplePatternBuilder.js","sourcesContent":["import { Container } from \"../../data/Container\";\n\nimport { BindToken } from \"../../tokens/BindToken\";\nimport { FilterToken } from \"../../tokens/FilterToken\";\nimport { GraphToken } from \"../../tokens/GraphToken\";\nimport { GroupPatternToken } from \"../../tokens/GroupPatternToken\";\nimport { MinusPatternToken } from \"../../tokens/MinusPatternToken\";\nimport { NotTripleToken } from \"../../tokens/NotTripleToken\";\nimport { OptionalToken } from \"../../tokens/OptionalToken\";\nimport { ServicePatternToken } from \"../../tokens/ServicePatternToken\";\nimport { TokenNode } from \"../../tokens/TokenNode\";\nimport { ValuesToken } from \"../../tokens/ValuesToken\";\nimport { VariableToken } from \"../../tokens/VariableToken\";\n\nimport { Pattern } from \"../Pattern\";\nimport { Resource } from \"../triplePatterns/Resource\";\nimport { Variable } from \"../triplePatterns/Variable\";\nimport { Undefined } from \"../Undefined\";\n\nimport { BindPattern } from \"./BindPattern\";\nimport { FilterPattern } from \"./FilterPattern\";\nimport { GraphPattern } from \"./GraphPattern\";\nimport { GroupPattern } from \"./GroupPattern\";\nimport { MinusPattern } from \"./MinusPattern\";\nimport { MultipleValuesPattern } from \"./MultipleValuesPattern\";\nimport { NotTriplePattern } from \"./NotTriplePattern\";\nimport { OptionalPattern } from \"./OptionalPattern\";\nimport { ServicePattern } from \"./ServicePattern\";\nimport { SingleValuesPattern } from \"./SingleValuesPattern\";\n\n\n/**\n * @todo\n */\nexport interface NotTriplePatternBuilder {\n\tundefined:Undefined;\n\n\tgraph( iri:string | Resource | Variable, pattern:Pattern ):GraphPattern;\n\tgraph( iri:string | Resource | Variable, patterns:Pattern[] ):GraphPattern;\n\n\tgroup( patterns:Pattern | Pattern[] ):GroupPattern;\n\n\toptional( pattern:Pattern ):OptionalPattern;\n\toptional( patterns:Pattern[] ):OptionalPattern;\n\n\tminus( pattern:Pattern ):MinusPattern;\n\tminus( firstPattern:Pattern, ...restPatterns:Pattern[] ):MinusPattern;\n\n\tservice( resource:string | Resource | Variable, patterns:Pattern | Pattern[] ):ServicePattern;\n\tserviceSilent( resource:string | Resource | Variable, patterns:Pattern | Pattern[] ):ServicePattern;\n\n\n\tfilter( rawConstraint:string ):FilterPattern;\n\n\t// TODO: Add expression support for this patterns\n\tbind( rawExpression:string, variable:string | Variable ):BindPattern;\n\n\tvalues( variable:Variable ):SingleValuesPattern;\n\tvalues( ...variables:Variable[] ):MultipleValuesPattern;\n}\n\n\nfunction _getPatternContainer<T extends NotTripleToken>( container:Container<TokenNode>, targetToken:T ):Container<T> {\n\treturn new Container( {\n\t\tiriResolver: container.iriResolver,\n\t\ttargetToken,\n\t} )\n}\n\nfunction _getPattern<T extends NotTripleToken>( container:Container<TokenNode>, token:T ):NotTriplePattern<T> {\n\tconst patternContainer = _getPatternContainer( container, token );\n\treturn NotTriplePattern.createFrom( patternContainer, {} );\n}\n\n\nfunction getGraphFn( container:Container<TokenNode> ):NotTriplePatternBuilder[ \"graph\" ] {\n\treturn ( iriOrVariable:string | Resource | Variable, patterns:Pattern | Pattern[] ) => {\n\t\tconst varOrIRI = typeof iriOrVariable === \"string\" ?\n\t\t\tcontainer.iriResolver.resolve( iriOrVariable ) :\n\t\t\tiriOrVariable.getSubject();\n\n\t\tconst token:GraphToken = new GraphToken( varOrIRI );\n\n\t\tpatterns = Array.isArray( patterns ) ? patterns : [ patterns ];\n\t\ttoken.addPattern( ...patterns.map( x => x.getPattern() ) );\n\n\t\treturn _getPattern( container, token );\n\t}\n}\n\nfunction getGroupFn( container:Container<TokenNode> ):NotTriplePatternBuilder[ \"group\" ] {\n\treturn ( patterns:Pattern | Pattern[] ) => {\n\t\tconst token:GroupPatternToken = new GroupPatternToken();\n\n\t\tpatterns = Array.isArray( patterns ) ? patterns : [ patterns ];\n\t\ttoken.patterns.push( ...patterns.map( x => x.getPattern() ) );\n\n\t\tconst patternContainer = _getPatternContainer( container, token );\n\t\treturn GroupPattern.createFrom( patternContainer, {} );\n\t}\n}\n\nfunction getOptionalFn( container:Container<TokenNode> ):NotTriplePatternBuilder[ \"optional\" ] {\n\treturn ( patterns:Pattern | Pattern[] ) => {\n\t\tconst token:OptionalToken = new OptionalToken();\n\n\t\tpatterns = Array.isArray( patterns ) ? patterns : [ patterns ];\n\t\ttoken.addPattern( ...patterns.map( x => x.getPattern() ) );\n\n\t\treturn _getPattern( container, token );\n\t}\n}\n\nfunction getMinusFn( container:Container<TokenNode> ):NotTriplePatternBuilder[ \"minus\" ] {\n\treturn ( ...patterns:Pattern[] ) => {\n\t\tconst token:MinusPatternToken = new MinusPatternToken();\n\t\ttoken.groupPattern.patterns\n\t\t\t.push( ...patterns.map( x => x.getPattern() ) );\n\n\t\treturn _getPattern( container, token );\n\t}\n}\n\nfunction getServiceFn( container:Container<TokenNode>, modifier?:\"SILENT\" ):NotTriplePatternBuilder[ \"service\" ] {\n\treturn ( resource:string | Resource | Variable, patterns:Pattern | Pattern[] ) => {\n\t\tconst varOrIRI = typeof resource === \"string\" ?\n\t\t\tcontainer.iriResolver.resolve( resource ) :\n\t\t\tresource.getSubject();\n\n\t\tconst token:ServicePatternToken = new ServicePatternToken( varOrIRI, modifier );\n\n\t\tpatterns = Array.isArray( patterns ) ? patterns : [ patterns ];\n\t\ttoken.groupPattern.patterns\n\t\t\t.push( ...patterns.map( x => x.getPattern() ) );\n\n\t\treturn _getPattern( container, token );\n\t}\n}\n\n\nfunction getFilterFn( container:Container<TokenNode> ):NotTriplePatternBuilder[ \"filter\" ] {\n\treturn ( rawConstraint:string ) => {\n\t\tconst token:FilterToken = new FilterToken( rawConstraint );\n\n\t\treturn _getPattern( container, token );\n\t}\n}\n\nfunction getBindFn( container:Container<TokenNode> ):NotTriplePatternBuilder[ \"bind\" ] {\n\treturn ( rawExpression:string, variable:string | Variable ) => {\n\t\tconst parsedVar = typeof variable === \"string\" ?\n\t\t\tnew VariableToken( variable ) :\n\t\t\tvariable.getSubject();\n\n\t\tconst token:BindToken = new BindToken( rawExpression, parsedVar );\n\n\t\treturn _getPattern( container, token );\n\t}\n}\n\nfunction getValuesFn( container:Container<TokenNode> ):NotTriplePatternBuilder[ \"values\" ] {\n\treturn ( ...variables:Variable[] ) => {\n\t\tconst token:ValuesToken = new ValuesToken();\n\t\ttoken.variables.push( ...variables.map( x => x.getSubject() ) );\n\n\t\tconst patternContainer = _getPatternContainer( container, token );\n\n\t\tif( variables.length === 1 )\n\t\t\treturn SingleValuesPattern\n\t\t\t\t.createFrom( patternContainer, {} );\n\n\t\treturn MultipleValuesPattern\n\t\t\t.createFrom( patternContainer, {} );\n\t}\n}\n\n\n/**\n * @todo\n */\nexport const NotTriplePatternBuilder = {\n\tcreateFrom<C extends Container<TokenNode>, O extends object>( container:C, object:O ):O & NotTriplePatternBuilder {\n\t\treturn Object.assign( object, {\n\t\t\tundefined: Undefined,\n\n\t\t\tgraph: getGraphFn( container ),\n\t\t\tgroup: getGroupFn( container ),\n\t\t\toptional: getOptionalFn( container ),\n\t\t\tminus: getMinusFn( container ),\n\t\t\tservice: getServiceFn( container ),\n\t\t\tserviceSilent: getServiceFn( container, \"SILENT\" ),\n\n\t\t\tfilter: getFilterFn( container ),\n\t\t\tbind: getBindFn( container ),\n\t\t\tvalues: getValuesFn( container ),\n\t\t} )\n\t},\n};"]}