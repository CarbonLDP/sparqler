{"version":3,"sources":["patterns/triplePatterns/BlankNodeBuilder.ts"],"names":[],"mappings":";;AAGA,4DAA2D;AAI3D,kCAAsD;AA+BtD,kBAAiE,SAAW;IAC3E,OAAO,UAAE,QAAqC,EAAE,OAA2B;QAE1E,IAAM,SAAS,GAA4B,CAAC,OAAO,QAAQ,KAAK,QAAQ,CAAC;YACxE,CAAC,CAAC,oBAAY,CAAE,SAAS,EAAE,QAAQ,CAAE;YACrC,CAAC,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;QAEzB,IAAM,aAAa,GAAiB,IAAI,6BAAa,CAAE,SAAS,CAAE,CAAC;QAEnE,OAAO,GAAG,KAAK,CAAC,OAAO,CAAE,OAAO,CAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAE,OAAO,CAAE,CAAC;QAC3D,aAAa,CAAC,SAAS,OAAvB,aAAa,EAAe,OAAO,CAAC,GAAG,CAAE,oBAAY,CAAE,EAAG;QAE1D,SAAS,CAAC,WAAW,CAAC,UAAU;aAC9B,IAAI,CAAE,aAAa,CAAE,CAAC;QAExB,OAAO,2BAAmB,CAAC,UAAU,CAAE,SAAS,EAAE,EAAE,CAAE,CAAC;IACxD,CAAC,CAAC;AACH,CAAC;AAMY,QAAA,gBAAgB,GAAG;IAC/B,UAAU,EAAV,UAA4E,SAAW,EAAE,MAAQ;QAChG,OAAO,MAAM,CAAC,MAAM,CAAE,MAAM,EAAE;YAC7B,GAAG,EAAE,QAAQ,CAAE,SAAS,CAAE;SAC1B,CAAE,CAAC;IACL,CAAC;CACD,CAAC;AAKW,QAAA,mBAAmB,GAAG;IAClC,UAAU,EAAV,UAA4E,SAAW,EAAE,MAAQ;QAChG,OAAO,MAAM,CAAC,MAAM,CAAE,MAAM,EAAE;YAC7B,GAAG,EAAE,QAAQ,CAAE,SAAS,CAAE;SAC1B,CAAE,CAAC;IACL,CAAC;CACD,CAAC","file":"BlankNodeBuilder.js","sourcesContent":["import { Container2 } from \"../../data/Container2\";\n\nimport { BlankNodePropertyToken } from \"../../tokens/BlankNodePropertyToken\";\nimport { PropertyToken } from \"../../tokens/PropertyToken\";\nimport { VariableOrIRIToken } from \"../../tokens/VariableOrIRIToken\";\n\nimport { SupportedNativeTypes } from \"../SupportedNativeTypes\";\nimport { _resolvePath, convertValue } from \"../utils\";\n\nimport { BlankNodeProperty } from \"./BlankNodeProperty\";\nimport { Collection } from \"./Collection\";\nimport { Literal } from \"./Literal\";\nimport { Resource } from \"./Resource\";\nimport { Variable } from \"./Variable\";\n\n\n/**\n * @todo\n */\nexport interface BlankNodeBuilder {\n\thas( property:Variable | Resource | \"a\" | string, object:SupportedNativeTypes | Resource | Variable | Literal | Collection | BlankNodeProperty ):BlankNodeBuilderAnd;\n\thas( property:Variable | Resource | \"a\" | string, objects:(SupportedNativeTypes | Resource | Variable | Literal | Collection | BlankNodeProperty)[] ):BlankNodeBuilderAnd;\n}\n\n/**\n * @todo\n */\nexport interface BlankNodeBuilderAnd {\n\tand( property:Variable | Resource | \"a\" | string, object:SupportedNativeTypes | Resource | Variable | Literal | Collection | BlankNodeProperty ):BlankNodeBuilderAnd;\n\tand( property:Variable | Resource | \"a\" | string, objects:(SupportedNativeTypes | Resource | Variable | Literal | Collection | BlankNodeProperty)[] ):BlankNodeBuilderAnd;\n}\n\n\ntype Objects = SupportedNativeTypes | Resource | Variable | Literal | Collection | BlankNodeProperty;\n\n/**\n * @todo\n */\nfunction getHasFn<C extends Container2<BlankNodePropertyToken>>( container:C ):BlankNodeBuilder[ \"has\" ] {\n\treturn ( property:string | Variable | Resource, objects:Objects | Objects[] ) => {\n\t\t// TODO: Merge repeated code from TriplePatternHas\n\t\tconst verbToken:VariableOrIRIToken | \"a\" = (typeof property === \"string\")\n\t\t\t? _resolvePath( container, property )\n\t\t\t: property.getSubject();\n\n\t\tconst propertyToken:PropertyToken = new PropertyToken( verbToken );\n\n\t\tobjects = Array.isArray( objects ) ? objects : [ objects ];\n\t\tpropertyToken.addObject( ...objects.map( convertValue ) );\n\n\t\tcontainer.targetToken.properties\n\t\t\t.push( propertyToken );\n\n\t\treturn BlankNodeBuilderAnd.createFrom( container, {} );\n\t};\n}\n\n\n/**\n * @todo\n */\nexport const BlankNodeBuilder = {\n\tcreateFrom<C extends Container2<BlankNodePropertyToken>, O extends object>( container:C, object:O ):O & BlankNodeBuilder {\n\t\treturn Object.assign( object, {\n\t\t\thas: getHasFn( container ),\n\t\t} );\n\t}\n};\n\n/**\n * @todo\n */\nexport const BlankNodeBuilderAnd = {\n\tcreateFrom<C extends Container2<BlankNodePropertyToken>, O extends object>( container:C, object:O ):O & BlankNodeBuilderAnd {\n\t\treturn Object.assign( object, {\n\t\t\tand: getHasFn( container ),\n\t\t} );\n\t}\n};"]}