{"version":3,"sources":["patterns/triples/Variable.ts"],"names":[],"mappings":";;;;;;;;;;;;AACA,mDAAsD;AACtD,0CAGyB;AACzB,mDAAkD;AAElD;IAA8B,4BAAc;IAI3C,kBAAa,QAAoB,EAAE,IAAW;QAA9C,YACC,kBAAO,QAAQ,CAAE,SAEjB;QADA,KAAI,CAAC,aAAa,GAAG,CAAE,mBAAU,EAAE,IAAI,sBAAa,CAAE,IAAI,CAAE,CAAE,CAAC;;IAChE,CAAC;IAEF,eAAC;AAAD,CATA,AASC,CAT6B,+BAAc,GAS3C;AATY,4BAAQ;AAWrB,kBAAe,QAAQ,CAAC","file":"Variable.js","sourcesContent":["import { IRIResolver } from \"sparqler/patterns\";\nimport { VAR_SYMBOL } from \"sparqler/patterns/tokens\";\nimport {\n\tStringLiteral,\n\tToken,\n} from \"sparqler/tokens\";\nimport { TriplesSubject } from \"./TriplesSubject\";\n\nexport class Variable extends TriplesSubject {\n\n\tprotected elementTokens:Token[];\n\n\tconstructor( resolver:IRIResolver, name:string ) {\n\t\tsuper( resolver );\n\t\tthis.elementTokens = [ VAR_SYMBOL, new StringLiteral( name ) ];\n\t}\n\n}\n\nexport default Variable;\n"]}