{"version":3,"sources":["tokens/BindToken.ts"],"names":[],"mappings":";;AASA;IAMC,mBAAa,UAAiB,EAAE,QAAsB;QAL7C,UAAK,GAAU,MAAM,CAAC;QAM9B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC1B,CAAC;IAGD,4BAAQ,GAAR,UAAU,MAAc;QACvB,OAAO,UAAS,IAAI,CAAC,UAAU,YAAS,IAAI,CAAC,QAAQ,MAAI,CAAC;IAC3D,CAAC;IACF,gBAAC;AAAD,CAfA,AAeC,IAAA;AAfY,8BAAS","file":"BindToken.js","sourcesContent":["import { TokenNode } from \"./TokenNode\";\nimport { VariableToken } from \"./VariableToken\";\n\n\n/**\n * The token of the `BIND` statement.\n *\n * @see {@link https://www.w3.org/TR/sparql11-query/#rBind}\n */\nexport class BindToken implements TokenNode {\n\treadonly token:\"bind\" = \"bind\";\n\n\treadonly expression:string;\n\treadonly variable:VariableToken;\n\n\tconstructor( expression:string, variable:VariableToken ) {\n\t\tthis.expression = expression;\n\t\tthis.variable = variable;\n\t}\n\n\n\ttoString( spaces?:number ):string {\n\t\treturn `BIND(${ this.expression } AS ${ this.variable })`;\n\t}\n}\n"]}