{"version":3,"sources":["tokens/BlankNodeToken.ts"],"names":[],"mappings":";;AAKA,IAAM,WAAW,GAAU,mDAAmD,CAAC;AAQ/E;IAIC,wBAAa,KAAa;QAHjB,UAAK,GAAe,WAAW,CAAC;QAIxC,IAAI,CAAE,KAAK;YAAG,OAAO;QACrB,IAAI,CAAE,WAAW,CAAC,IAAI,CAAE,KAAK,CAAE;YAAG,MAAM,IAAI,KAAK,CAAE,2BAA2B,CAAE,CAAC;QACjF,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACpB,CAAC;IAED,iCAAQ,GAAR,UAAU,MAAc;QACvB,IAAI,IAAI,CAAC,KAAK;YAAG,OAAO,IAAI,CAAC,KAAK,CAAC;QACnC,OAAO,IAAI,CAAC;IACb,CAAC;IACF,qBAAC;AAAD,CAdA,AAcC,IAAA;AAdY,wCAAc","file":"BlankNodeToken.js","sourcesContent":["import { TokenNode } from \"./TokenNode\";\n\n/**\n * Regex to evaluate a correct blank node label.\n */\nconst LABEL_REGEX:RegExp = /^_:[A-Za-z0-9_]([A-Za-z0-9_\\-.]*[A-Za-z0-9_\\-])?$/;\n\n\n/**\n * The token of a blank node resource.\n *\n * @see {@link https://www.w3.org/TR/sparql11-query/#rBlankNode}\n */\nexport class BlankNodeToken implements TokenNode {\n\treadonly token:\"blankNode\" = \"blankNode\";\n\treadonly label?:string;\n\n\tconstructor( label?:string ) {\n\t\tif( ! label ) return;\n\t\tif( ! LABEL_REGEX.test( label ) ) throw new Error( \"Invalid blank node label.\" );\n\t\tthis.label = label;\n\t}\n\n\ttoString( spaces?:number ):string {\n\t\tif( this.label ) return this.label;\n\t\treturn `[]`;\n\t}\n}\n"]}