{"version":3,"sources":["tokens/ConstructToken.ts"],"names":[],"mappings":";;;;;;;;;;;;AACA,mEAAkE;AAGlE;IAAoC,kCAAsB;IAKzD;QAAA,YACC,iBAAO,SAGP;QARQ,WAAK,GAAe,WAAW,CAAC;QAOxC,KAAI,CAAC,OAAO,GAAG,EAAE,CAAC;;IACnB,CAAC;IAGD,kCAAS,GAAT;QAAW,gBAAuB;aAAvB,UAAuB,EAAvB,qBAAuB,EAAvB,IAAuB;YAAvB,2BAAuB;;;QACjC,CAAA,KAAA,IAAI,CAAC,OAAO,CAAA,CAAC,IAAI,WAAK,MAAM,EAAG;QAC/B,OAAO,IAAI,CAAC;IACb,CAAC;IAGD,iCAAQ,GAAR;QACC,IAAI,KAAK,GAAU,iBAAgB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAE,IAAI,CAAE,WAAQ,IAAI,CAAC,KAAQ,CAAC;QAElF,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM;YAAG,KAAK,IAAI,MAAK,IAAI,CAAC,SAAS,CAAC,IAAI,CAAE,GAAG,CAAK,CAAC;QAExE,OAAO,KAAK,CAAC;IACd,CAAC;IACF,qBAAC;AAAD,CAzBA,AAyBC,CAzBmC,+CAAsB,GAyBzD;AAzBY,wCAAc","file":"ConstructToken.js","sourcesContent":["import { TripleToken } from \"./\";\nimport { CommonQueryClauseToken } from \"./CommonQueryClauseToken\";\n\n\nexport class ConstructToken extends CommonQueryClauseToken {\n\treadonly token:\"construct\" = \"construct\";\n\n\treadonly triples:TripleToken[];\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.triples = [];\n\t}\n\n\n\taddTriple( ...triple:TripleToken[] ):this {\n\t\tthis.triples.push( ...triple );\n\t\treturn this;\n\t}\n\n\n\ttoString():string {\n\t\tlet query:string = `CONSTRUCT { ${ this.triples.join( \". \" ) } } ${ this.where }`;\n\n\t\tif( this.modifiers.length ) query += ` ${ this.modifiers.join( \" \" ) }`;\n\n\t\treturn query;\n\t}\n}\n"]}