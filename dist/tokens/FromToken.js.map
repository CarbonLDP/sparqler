{"version":3,"sources":["tokens/FromToken.ts"],"names":[],"mappings":";;AASA;IAMC,mBAAa,MAAe,EAAE,KAAqB;QAArB,sBAAA,EAAA,aAAqB;QAL1C,UAAK,GAAU,MAAM,CAAC;QAM9B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACpB,CAAC;IAED,4BAAQ,GAAR,UAAU,MAAc;QACvB,IAAI,GAAG,GAAU,OAAO,CAAC;QAEzB,IAAI,IAAI,CAAC,KAAK;YAAG,GAAG,IAAI,QAAQ,CAAC;QAEjC,OAAO,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;IAC1B,CAAC;IACF,gBAAC;AAAD,CAlBA,AAkBC,IAAA;AAlBY,8BAAS","file":"FromToken.js","sourcesContent":["import { IRIToken } from \"./IRIToken\";\nimport { TokenNode } from \"./TokenNode\";\n\n\n/**\n * The token of the `FROM` statement.\n *\n * @see {@link https://www.w3.org/TR/sparql11-query/#rDatasetClause}\n */\nexport class FromToken implements TokenNode {\n\treadonly token:\"from\" = \"from\";\n\n\treadonly named:boolean;\n\treadonly source:IRIToken;\n\n\tconstructor( source:IRIToken, named:boolean = false ) {\n\t\tthis.source = source;\n\t\tthis.named = named;\n\t}\n\n\ttoString( spaces?:number ):string {\n\t\tlet str:string = `FROM `;\n\n\t\tif( this.named ) str += `NAMED `;\n\n\t\treturn str + this.source;\n\t}\n}\n"]}