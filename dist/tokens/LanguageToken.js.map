{"version":3,"sources":["tokens/LanguageToken.ts"],"names":[],"mappings":";;AAEA,IAAM,cAAc,GAAU,6BAA6B,CAAC;AAE5D,uBAA+B,GAAU;IACxC,OAAO,cAAc,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC;AACnC,CAAC;AAFD,sCAEC;AAED;IAIC,uBAAa,GAAU;QAHd,UAAK,GAAc,UAAU,CAAC;QAItC,IAAI,CAAE,aAAa,CAAE,GAAG,CAAE;YAAG,MAAM,IAAI,KAAK,CAAE,uBAAuB,CAAE,CAAC;QACxE,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IAChB,CAAC;IAED,gCAAQ,GAAR;QACC,OAAO,MAAK,IAAI,CAAC,GAAM,CAAC;IACzB,CAAC;IACF,oBAAC;AAAD,CAZA,AAYC,IAAA;AAZY,sCAAa","file":"LanguageToken.js","sourcesContent":["import { TokenNode } from \"./TokenNode\";\n\nconst LANGUAGE_REGEX:RegExp = /^[a-zA-Z]+(-[a-zA-Z0-9]+)*$/;\n\nexport function isLanguageTag( tag:string ):boolean {\n\treturn LANGUAGE_REGEX.test( tag );\n}\n\nexport class LanguageToken implements TokenNode {\n\treadonly token:\"language\" = \"language\";\n\treadonly tag:string;\n\n\tconstructor( tag:string ) {\n\t\tif( ! isLanguageTag( tag ) ) throw new Error( \"Invalid language tag.\" );\n\t\tthis.tag = tag;\n\t}\n\n\ttoString():string {\n\t\treturn `@${ this.tag }`;\n\t}\n}\n"]}