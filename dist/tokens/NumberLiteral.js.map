{"version":3,"sources":["tokens/NumberLiteral.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,2CAA0C;AAC1C,uCAAsC;AACtC,6CAA4C;AAC5C,iCAKiB;AAEjB;IAAmC,iCAAK;IAEvC,uBAAa,KAAY;eACxB,kBAAO,KAAK,GAAG,EAAE,CAAE;IACpB,CAAC;IAES,0CAAkB,GAA5B,UAA8B,SAAe;QAC5C,IAAI,SAAS,YAAY,uBAAU;YAClC,OAAO,0BAAkB,CAAC;QAE3B,IAAI,SAAS,YAAY,mBAAQ,IAAI,SAAS,YAAY,yBAAW;YACpE,OAAO,uBAAe,CAAC;QAExB,OAAO,uBAAe,CAAC;IACxB,CAAC;IAES,2CAAmB,GAA7B,UAA+B,SAAe;QAC7C,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS,CAAC,WAAW;YAC7C,OAAO,uBAAe,CAAC;QAExB,OAAO,uBAAe,CAAC;IACxB,CAAC;IAEF,oBAAC;AAAD,CAvBA,AAuBC,CAvBkC,aAAK,GAuBvC;AAvBY,sCAAa;AAyB1B,kBAAe,aAAa,CAAC","file":"NumberLiteral.js","sourcesContent":["import { Identifier } from \"./Identifier\";\nimport { Operator } from \"./Operator\";\nimport { RightSymbol } from \"./RightSymbol\";\nimport {\n\tEMPTY_SEPARATOR,\n\tNEW_LINE_SEPARATOR,\n\tSPACE_SEPARATOR,\n\tToken,\n} from \"./Token\";\n\nexport class NumberLiteral extends Token {\n\n\tconstructor( value:number ) {\n\t\tsuper( value + \"\" );\n\t}\n\n\tprotected getPrettySeparator( nextToken:Token ):string {\n\t\tif( nextToken instanceof Identifier )\n\t\t\treturn NEW_LINE_SEPARATOR;\n\n\t\tif( nextToken instanceof Operator || nextToken instanceof RightSymbol )\n\t\t\treturn EMPTY_SEPARATOR;\n\n\t\treturn SPACE_SEPARATOR;\n\t}\n\n\tprotected getCompactSeparator( nextToken:Token ):string {\n\t\tif( this.constructor === nextToken.constructor )\n\t\t\treturn SPACE_SEPARATOR;\n\n\t\treturn EMPTY_SEPARATOR;\n\t}\n\n}\n\nexport default NumberLiteral;\n"]}