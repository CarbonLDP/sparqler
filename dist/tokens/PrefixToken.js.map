{"version":3,"sources":["tokens/PrefixToken.ts"],"names":[],"mappings":";;AASA;IAKC,qBAAa,SAAgB,EAAE,GAAe;QAJrC,UAAK,GAAY,QAAQ,CAAC;QAKlC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IAChB,CAAC;IAED,8BAAQ,GAAR,UAAU,MAAc;QACvB,OAAO,YAAW,IAAI,CAAC,SAAS,UAAO,IAAI,CAAC,GAAM,CAAC;IACpD,CAAC;IACF,kBAAC;AAAD,CAbA,AAaC,IAAA;AAbY,kCAAW","file":"PrefixToken.js","sourcesContent":["import { IRIRefToken } from \"./IRIRefToken\";\nimport { TokenNode } from \"./TokenNode\";\n\n\n/**\n * The token of the `PREFIX` statement.\n *\n * @see {@link https://www.w3.org/TR/sparql11-query/#rPrefixDecl}\n */\nexport class PrefixToken implements TokenNode {\n\treadonly token:\"prefix\" = \"prefix\";\n\treadonly namespace:string;\n\treadonly iri:IRIRefToken;\n\n\tconstructor( namespace:string, iri:IRIRefToken ) {\n\t\tthis.namespace = namespace;\n\t\tthis.iri = iri;\n\t}\n\n\ttoString( spaces?:number ):string {\n\t\treturn `PREFIX ${ this.namespace }: ${ this.iri }`;\n\t}\n}\n"]}