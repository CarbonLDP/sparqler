{"version":3,"sources":["tokens/PrefixedNameToken.ts"],"names":[],"mappings":";;AAAA,4CAAgD;AAGhD,IAAM,eAAe,GAAU,oDAAoD,CAAC;AACpF,IAAM,eAAe,GAAU,6BAA6B,CAAC;AAE7D;IAOC,2BAAa,mBAA0B,EAAE,SAAiB;QANjD,UAAK,GAAkB,cAAc,CAAC;QAO9C,IAAI,SAAS,GAAU,mBAAmB,CAAC;QAC3C,EAAE,CAAA,CAAE,SAAS,KAAK,KAAK,CAAE,CAAC,CAAC,CAAC;YAC3B,EAAE,CAAA,CAAE,CAAE,kBAAU,CAAE,mBAAmB,CAAG,CAAC;gBAAC,MAAM,IAAI,KAAK,CAAE,wBAAwB,CAAE,CAAC;YACtF,uCAA+D,EAA7D,iBAAS,EAAE,iBAAS,CAA0C;QACjE,CAAC;QAED,EAAE,CAAA,CAAE,CAAE,eAAe,CAAC,IAAI,CAAE,SAAS,CAAG,CAAC;YAAC,MAAM,IAAI,KAAK,CAAE,6BAA6B,CAAE,CAAC;QAE3F,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,OAAO,CAAE,eAAe,EAAE,MAAM,CAAE,CAAC;;IAC/D,CAAC;IAED,oCAAQ,GAAR;QACC,MAAM,CAAK,IAAI,CAAC,SAAS,SAAM,IAAI,CAAC,SAAY,CAAC;IAClD,CAAC;IACF,wBAAC;AAAD,CAvBA,AAuBC,IAAA;AAvBY,8CAAiB","file":"PrefixedNameToken.js","sourcesContent":["import { isPrefixed } from \"sparqler/iri/utils\";\nimport { TokenNode } from \"./TokenNode\";\n\nconst NAMESPACE_REGEX:RegExp = /^([A-Za-z](([A-Za-z_\\-0-9]|\\.)*[A-Za-z_\\-0-9])?)?$/;\nconst NORMALIZE_REGEX:RegExp = /([_~.\\-!$&'|()*+,;=/?#@%])/g;\n\nexport class PrefixedNameToken implements TokenNode {\n\treadonly token:\"prefixedName\" = \"prefixedName\";\n\treadonly namespace:string;\n\treadonly localName:string;\n\n\tconstructor( prefixedName:string );\n\tconstructor( namespace:string, localName:string );\n\tconstructor( prefixedOrNamespace:string, localName?:string ) {\n\t\tlet namespace:string = prefixedOrNamespace;\n\t\tif( localName === void 0 ) {\n\t\t\tif( ! isPrefixed( prefixedOrNamespace ) ) throw new Error( \"Invalid prefixed name.\" );\n\t\t\t[ namespace, localName ] = prefixedOrNamespace.split( /:(.*)/ );\n\t\t}\n\n\t\tif( ! NAMESPACE_REGEX.test( namespace ) ) throw new Error( \"Invalid prefixed namespace.\" );\n\n\t\tthis.namespace = namespace;\n\t\tthis.localName = localName.replace( NORMALIZE_REGEX, \"\\\\$1\" );\n\t}\n\n\ttoString():string {\n\t\treturn `${ this.namespace }:${ this.localName }`;\n\t}\n}\n"]}