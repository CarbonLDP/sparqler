{"version":3,"sources":["tokens/PrefixedNameToken.ts"],"names":[],"mappings":";;AAAA,wCAA4C;AAG5C,IAAM,eAAe,GAAU,oDAAoD,CAAC;AAEpF;IAOC,2BAAa,mBAA0B,EAAE,SAAiB;;QANjD,UAAK,GAAkB,cAAc,CAAC;QAO9C,IAAI,SAAS,GAAU,mBAAmB,CAAC;QAC3C,IAAI,SAAS,KAAK,KAAK,CAAC,EAAG;YAC1B,IAAI,CAAE,kBAAU,CAAE,mBAAmB,CAAE;gBAAG,MAAM,IAAI,KAAK,CAAE,wBAAwB,CAAE,CAAC;YACtF,uCAA+D,EAA7D,iBAAS,EAAE,iBAAS,CAA0C;SAChE;QAED,IAAI,CAAE,eAAe,CAAC,IAAI,CAAE,SAAS,CAAE;YAAG,MAAM,IAAI,KAAK,CAAE,6BAA6B,CAAE,CAAC;QAC3F,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAErB,IAAA,0CAA6D,EAAzD,WAAG,EAAE,WAAG,EAAE,WAAG,CAA6C;QAEpE,IAAI,aAAa,GAAU,EAAE,CAAC;QAC9B,IAAI,GAAG;YAAG,aAAa,IAAI,GAAG,CAAC,OAAO,CAAE,UAAU,EAAE,MAAM,CAAE,CAAC;QAC7D,IAAI,GAAG;YAAG,aAAa,IAAI,GAAG,CAAC;QAC/B,IAAI,GAAG;YAAG,aAAa,IAAI,GAAG,CAAC,OAAO,CAAE,QAAQ,EAAE,MAAM,CAAE,CAAC;QAE3D,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC,OAAO,CAAE,yBAAyB,EAAE,MAAM,CAAE,CAAC;IAC7E,CAAC;IAED,oCAAQ,GAAR;QACC,OAAW,IAAI,CAAC,SAAS,SAAM,IAAI,CAAC,SAAY,CAAC;IAClD,CAAC;IACF,wBAAC;AAAD,CA9BA,AA8BC,IAAA;AA9BY,8CAAiB","file":"PrefixedNameToken.js","sourcesContent":["import { isPrefixed } from \"./../iri/utils\";\nimport { TokenNode } from \"./TokenNode\";\n\nconst NAMESPACE_REGEX:RegExp = /^([A-Za-z](([A-Za-z_\\-0-9]|\\.)*[A-Za-z_\\-0-9])?)?$/;\n\nexport class PrefixedNameToken implements TokenNode {\n\treadonly token:\"prefixedName\" = \"prefixedName\";\n\treadonly namespace:string;\n\treadonly localName:string;\n\n\tconstructor( prefixedName:string );\n\tconstructor( namespace:string, localName:string );\n\tconstructor( prefixedOrNamespace:string, localName?:string ) {\n\t\tlet namespace:string = prefixedOrNamespace;\n\t\tif( localName === void 0 ) {\n\t\t\tif( ! isPrefixed( prefixedOrNamespace ) ) throw new Error( \"Invalid prefixed name.\" );\n\t\t\t[ namespace, localName ] = prefixedOrNamespace.split( /:(.*)/ );\n\t\t}\n\n\t\tif( ! NAMESPACE_REGEX.test( namespace ) ) throw new Error( \"Invalid prefixed namespace.\" );\n\t\tthis.namespace = namespace;\n\n\t\tconst [ , ln1, ln2, ln3 ] = localName.split( /^(.)(?:(.*)?(.))?$/ );\n\n\t\tlet preSanitation:string = \"\";\n\t\tif( ln1 ) preSanitation += ln1.replace( /([\\-.])/g, \"\\\\$1\" );\n\t\tif( ln2 ) preSanitation += ln2;\n\t\tif( ln2 ) preSanitation += ln3.replace( /([.])/g, \"\\\\$1\" );\n\n\t\tthis.localName = preSanitation.replace( /([~!$&'|()*+,;=/?#@%])/g, \"\\\\$1\" );\n\t}\n\n\ttoString():string {\n\t\treturn `${ this.namespace }:${ this.localName }`;\n\t}\n}\n"]}