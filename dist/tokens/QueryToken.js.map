{"version":3,"sources":["tokens/QueryToken.ts"],"names":[],"mappings":";;AAEA,uCAA0C;AAW1C;IAOC,oBAAa,KAAO,EAAE,MAAmB;QANhC,UAAK,GAAW,OAAO,CAAC;QAOhC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACtB,CAAC;IAGD,iCAAY,GAAZ;QAAc,mBAAwC;aAAxC,UAAwC,EAAxC,qBAAwC,EAAxC,IAAwC;YAAxC,8BAAwC;;;QACrD,CAAA,KAAA,IAAI,CAAC,SAAS,CAAA,CAAC,IAAI,WAAK,SAAS,EAAG;QACpC,OAAO,IAAI,CAAC;IACb,CAAC;IAGD,6BAAQ,GAAR,UAAU,MAAc;QACvB,IAAM,SAAS,GAAU,uBAAY,CAAE,MAAM,CAAE,CAAC;QAEhD,IAAI,KAAK,GAAU,IAAI,CAAC,SAAS;aAC/B,GAAG,CAAE,UAAA,QAAQ;YAEb,IAAI,QAAQ,CAAC,KAAK,KAAK,MAAM;gBAC5B,OAAO,QAAQ,GAAG,IAAI,CAAC;YACxB,OAAO,QAAQ,GAAG,SAAS,CAAC;QAC7B,CAAC,CAAE;aACF,IAAI,CAAE,EAAE,CAAE,CAAC;QAEb,IAAI,IAAI,CAAC,WAAW;YAAG,KAAK,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAE,MAAM,CAAE,CAAC;QAEpE,IAAI,IAAI,CAAC,MAAM;YAAG,KAAK,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAE,MAAM,CAAE,CAAC;QAEtE,OAAO,KAAK,CAAC;IACd,CAAC;IACF,iBAAC;AAAD,CAtCA,AAsCC,IAAA;AAtCY,gCAAU","file":"QueryToken.js","sourcesContent":["import { BaseToken } from \"./BaseToken\";\nimport { PrefixToken } from \"./PrefixToken\";\nimport { getSeparator } from \"./printing\";\nimport { QueryClauseToken } from \"./QueryClauseToken\";\nimport { TokenNode } from \"./TokenNode\";\nimport { ValuesToken } from \"./ValuesToken\";\n\n\n/**\n * Token of a complete query statement.\n *\n * @see {@link https://www.w3.org/TR/sparql11-query/#rQuery}\n */\nexport class QueryToken<T extends QueryClauseToken | undefined = QueryClauseToken | undefined> implements TokenNode {\n\treadonly token:\"query\" = \"query\";\n\n\treadonly prologues:(BaseToken | PrefixToken)[];\n\treadonly queryClause:T;\n\treadonly values?:ValuesToken;\n\n\tconstructor( query:T, values?:ValuesToken ) {\n\t\tthis.prologues = [];\n\t\tthis.queryClause = query;\n\t\tthis.values = values;\n\t}\n\n\n\taddPrologues( ...prologues:(BaseToken | PrefixToken)[] ):this {\n\t\tthis.prologues.push( ...prologues );\n\t\treturn this;\n\t}\n\n\n\ttoString( spaces?:number ):string {\n\t\tconst separator:string = getSeparator( spaces );\n\n\t\tlet query:string = this.prologues\n\t\t\t.map( prologue => {\n\t\t\t\t// TODO: Remove new line separator when resolved https://community.stardog.com/t/error-with-inline-sparql-base/1200\n\t\t\t\tif( prologue.token === \"base\" )\n\t\t\t\t\treturn prologue + \"\\n\";\n\t\t\t\treturn prologue + separator;\n\t\t\t} )\n\t\t\t.join( \"\" );\n\n\t\tif( this.queryClause ) query += this.queryClause.toString( spaces );\n\n\t\tif( this.values ) query += separator + this.values.toString( spaces );\n\n\t\treturn query;\n\t}\n}\n"]}