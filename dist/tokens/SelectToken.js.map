{"version":3,"sources":["tokens/SelectToken.ts"],"names":[],"mappings":";;AAMA,iCAAuC;AAEvC;IAOC,qBAAa,QAAgC;QANpC,UAAK,GAAY,QAAQ,CAAC;QAOlC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEzB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACrB,CAAC;IAED,iCAAW,GAAX;QAAa,mBAA4B;aAA5B,UAA4B,EAA5B,qBAA4B,EAA5B,IAA4B;YAA5B,8BAA4B;;QACxC,CAAA,KAAA,IAAI,CAAC,SAAS,CAAA,CAAC,IAAI,WAAK,SAAS,EAAG;QACpC,MAAM,CAAC,IAAI,CAAC;;IACb,CAAC;IAED,gCAAU,GAAV;QAAY,kBAA0B;aAA1B,UAA0B,EAA1B,qBAA0B,EAA1B,IAA0B;YAA1B,6BAA0B;;QACrC,CAAA,KAAA,IAAI,CAAC,QAAQ,CAAA,CAAC,IAAI,WAAK,QAAQ,EAAG;QAClC,MAAM,CAAC,IAAI,CAAC;;IACb,CAAC;IAED,iCAAW,GAAX;QAAa,kBAA8B;aAA9B,UAA8B,EAA9B,qBAA8B,EAA9B,IAA8B;YAA9B,6BAA8B;;QAC1C,CAAA,KAAA,IAAI,CAAC,SAAS,CAAA,CAAC,IAAI,WAAK,QAAQ,EAAG;QACnC,MAAM,CAAC,IAAI,CAAC;;IACb,CAAC;IAED,8BAAQ,GAAR;QACC,IAAI,KAAK,GAAU,YAAW,IAAI,CAAC,SAAS,CAAC,IAAI,CAAE,GAAG,CAAE,iBAAc,oBAAY,CAAE,IAAI,CAAC,QAAQ,CAAE,OAAK,CAAC;QACzG,EAAE,CAAA,CAAE,IAAI,CAAC,SAAS,CAAC,MAAO,CAAC;YAAC,KAAK,IAAI,MAAK,IAAI,CAAC,SAAS,CAAC,IAAI,CAAE,GAAG,CAAK,CAAC;QAExE,MAAM,CAAC,KAAK,CAAC;IACd,CAAC;IACF,kBAAC;AAAD,CApCA,AAoCC,IAAA;AApCY,kCAAW","file":"SelectToken.js","sourcesContent":["import {\n\tPatternToken,\n\tSolutionModifier,\n} from \"./\";\nimport { TokenNode } from \"./TokenNode\";\nimport { VariableToken } from \"./VariableToken\";\nimport { joinPatterns } from \"./utils\";\n\nexport class SelectToken implements TokenNode {\n\treadonly token:\"select\" = \"select\";\n\treadonly modifier?:\"DISTINCT\" | \"REDUCED\";\n\treadonly variables:VariableToken[];\n\treadonly patterns:PatternToken[];\n\treadonly modifiers:SolutionModifier[];\n\n\tconstructor( modifier?:\"DISTINCT\" | \"REDUCED\" ) {\n\t\tthis.modifier = modifier;\n\n\t\tthis.variables = [];\n\t\tthis.patterns = [];\n\t\tthis.modifiers = [];\n\t}\n\n\taddVariable( ...variables:VariableToken[] ):this {\n\t\tthis.variables.push( ...variables );\n\t\treturn this;\n\t}\n\n\taddPattern( ...patterns:PatternToken[] ):this {\n\t\tthis.patterns.push( ...patterns );\n\t\treturn this;\n\t}\n\n\taddModifier( ...modifier:SolutionModifier[] ):this {\n\t\tthis.modifiers.push( ...modifier );\n\t\treturn this;\n\t}\n\n\ttoString():string {\n\t\tlet query:string = `SELECT ${ this.variables.join( \" \" ) } WHERE { ${ joinPatterns( this.patterns ) } }`;\n\t\tif( this.modifiers.length ) query += ` ${ this.modifiers.join( \" \" ) }`;\n\n\t\treturn query;\n\t}\n}\n"]}