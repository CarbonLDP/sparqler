{"version":3,"sources":["tokens/SubSelectToken.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,yDAAwD;AACxD,uCAAyF;AAIzF;IAAoC,kCAAiB;IAKpD,wBAAa,QAAgC,EAAE,MAAmB;QAAlE,YACC,kBAAO,QAAQ,CAAE,SAGjB;QARQ,WAAK,GAAe,WAAW,CAAC;QAOxC,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;;IACtB,CAAC;IAGD,iCAAQ,GAAR,UAAU,MAAc;QACvB,IAAM,SAAS,GAAsB,oBAAS,CAAE,MAAM,EAAE,6BAAkB,CAAE,CAAC;QAC7E,IAAM,SAAS,GAAU,yBAAc,CAAE,SAAS,CAAE,CAAC;QACrD,IAAM,SAAS,GAAU,uBAAY,CAAE,MAAM,CAAE,CAAC;QAEhD,IAAI,KAAK,GAAU,iBAAM,QAAQ,YAAE,MAAM,CAAE,GAAG,SAAS;YACtD,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAE,SAAS,CAAE,CAAC;QAE9C,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM;YAAG,KAAK,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS;iBAC7D,GAAG,CAAE,UAAA,CAAC,IAAI,OAAA,SAAS,GAAG,CAAC,EAAb,CAAa,CAAE;iBACzB,IAAI,CAAE,SAAS,CAAE,CAAC;QAEpB,IAAI,IAAI,CAAC,MAAM;YAAG,KAAK,IAAI,SAAS,GAAG,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC;QAE/D,IAAM,MAAM,GAAU,yBAAc,CAAE,MAAM,CAAE,CAAC;QAC/C,OAAO,GAAG,GAAG,SAAS,GAAG,SAAS;YACjC,KAAK,GAAG,SAAS;YACjB,MAAM,GAAG,GAAG,CAAC;IACf,CAAC;IACF,qBAAC;AAAD,CA/BA,AA+BC,CA/BmC,qCAAiB,GA+BpD;AA/BY,wCAAc","file":"SubSelectToken.js","sourcesContent":["import { CommonSelectToken } from \"./CommonSelectToken\";\nimport { addSpaces, getIndentation, getSeparator, INDENTATION_SPACES } from \"./printing\";\nimport { ValuesToken } from \"./ValuesToken\";\n\n\nexport class SubSelectToken extends CommonSelectToken {\n\treadonly token:\"subSelect\" = \"subSelect\";\n\n\treadonly values?:ValuesToken;\n\n\tconstructor( modifier?:\"DISTINCT\" | \"REDUCED\", values?:ValuesToken ) {\n\t\tsuper( modifier );\n\n\t\tthis.values = values;\n\t}\n\n\n\ttoString( spaces?:number ):string {\n\t\tconst subSpaces:number | undefined = addSpaces( spaces, INDENTATION_SPACES );\n\t\tconst subIndent:string = getIndentation( subSpaces );\n\t\tconst separator:string = getSeparator( spaces );\n\n\t\tlet query:string = super.toString( spaces ) + separator +\n\t\t\tsubIndent + this.where.toString( subSpaces );\n\n\t\tif( this.modifiers.length ) query += separator + this.modifiers\n\t\t\t.map( x => subIndent + x )\n\t\t\t.join( separator );\n\n\t\tif( this.values ) query += separator + subIndent + this.values;\n\n\t\tconst indent:string = getIndentation( spaces );\n\t\treturn \"{\" + separator + subIndent +\n\t\t\tquery + separator +\n\t\t\tindent + \"}\";\n\t}\n}\n"]}