{"version":3,"sources":["tokens/SubjectToken.ts"],"names":[],"mappings":";;AAAA,uCAAyF;AAOzF;IAMC,sBAAa,OAAS;QALb,UAAK,GAAa,SAAS,CAAC;QAMpC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACtB,CAAC;IAGD,mCAAY,GAAZ,UAAc,SAAuB;QACpC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAE,SAAS,CAAE,CAAC;QAClC,OAAO,IAAI,CAAC;IACb,CAAC;IAGD,+BAAQ,GAAR,UAAU,MAAc;QACvB,IAAI,KAAK,GAAU,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAE,MAAM,CAAE,CAAC;QAEnD,IAAI,SAAS,GAAU,CAAE,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;YACnD,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,YAAY,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,mBAAmB,CAAC;mBAClF,KAAK,CAAC,QAAQ,CAAE,IAAI,CAAE,CAAC,CAAC,CAAC,IAAI;gBAC/B,CAAC,CAAC,GAAG,CAAC;QAER,IAAM,SAAS,GAAU,SAAS,KAAK,GAAG,CAAC,CAAC;YAC3C,oBAAS,CAAE,MAAM,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,CAAE,CAAC,CAAC;YACvC,oBAAS,CAAE,MAAM,EAAE,6BAAkB,CAAE,CAAC;QAEzC,IAAM,SAAS,GAAU,yBAAc,CAAE,SAAS,CAAE,CAAC;QACrD,IAAM,UAAU,GAAU,IAAI,CAAC,UAAU;aACvC,GAAG,CAAE,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,QAAQ,CAAE,SAAS,CAAE,EAA9B,CAA8B,CAAE;aACjD,IAAI,CAAE,GAAG,GAAG,uBAAY,CAAE,MAAM,CAAE,GAAG,SAAS,CAAE,CAAC;QAEnD,IAAI,SAAS,KAAK,IAAI;YAAG,SAAS,IAAI,SAAS,CAAC;QAChD,OAAO,KAAK,GAAG,SAAS,GAAG,UAAU,CAAC;IACvC,CAAC;IACF,mBAAC;AAAD,CAtCA,AAsCC,IAAA;AAtCY,oCAAY","file":"SubjectToken.js","sourcesContent":["import { addSpaces, getIndentation, getSeparator, INDENTATION_SPACES } from \"./printing\";\nimport { PropertyToken } from \"./PropertyToken\";\nimport { TokenNode } from \"./TokenNode\";\nimport { TripleNodeToken } from \"./TripleNodeToken\";\nimport { VariableOrTermToken } from \"./VariableOrTermToken\";\n\n\nexport class SubjectToken<T extends VariableOrTermToken | TripleNodeToken = VariableOrTermToken | TripleNodeToken> implements TokenNode {\n\treadonly token:\"subject\" = \"subject\";\n\n\treadonly subject:T;\n\treadonly properties:PropertyToken[];\n\n\tconstructor( subject:T ) {\n\t\tthis.subject = subject;\n\t\tthis.properties = [];\n\t}\n\n\n\taddPredicate( predicate:PropertyToken ):this {\n\t\tthis.properties.push( predicate );\n\t\treturn this;\n\t}\n\n\n\ttoString( spaces?:number ):string {\n\t\tlet query:string = this.subject.toString( spaces );\n\n\t\tlet separator:string = ! this.properties.length ? \"\"\n\t\t\t: (this.subject.token === \"collection\" || this.subject.token === \"blankNodeProperty\")\n\t\t\t&& query.includes( \"\\n\" ) ? \"\\n\"\n\t\t\t\t: \" \";\n\n\t\tconst subSpaces:number = separator === \" \" ?\n\t\t\taddSpaces( spaces, query.length + 1 ) :\n\t\t\taddSpaces( spaces, INDENTATION_SPACES );\n\n\t\tconst subIndent:string = getIndentation( subSpaces );\n\t\tconst properties:string = this.properties\n\t\t\t.map( property => property.toString( subSpaces ) )\n\t\t\t.join( \";\" + getSeparator( spaces ) + subIndent );\n\n\t\tif( separator === \"\\n\" ) separator += subIndent;\n\t\treturn query + separator + properties;\n\t}\n}\n"]}