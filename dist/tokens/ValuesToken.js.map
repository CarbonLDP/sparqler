{"version":3,"sources":["tokens/ValuesToken.ts"],"names":[],"mappings":";;AAGA,uCAA8E;AAK9E;IAMC;QALS,UAAK,GAAY,QAAQ,CAAC;QAMlC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IAClB,CAAC;IAGD,+BAAS,GAAT,UAAW,QAAsB;QAAE,gBAAmE;aAAnE,UAAmE,EAAnE,qBAAmE,EAAnE,IAAmE;YAAnE,+BAAmE;;QACrG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAE,QAAQ,CAAE,CAAC;QAChC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE,MAAM,CAAE,CAAC;QAE3B,OAAO,IAAI,CAAC;IACb,CAAC;IAGD,8BAAQ,GAAR,UAAU,MAAc;QACvB,IAAM,SAAS,GAAU,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAEjD,IAAM,MAAM,GAAU,IAAI,CAAC,aAAa,CAAE,MAAM,CAAE,CAAC;QACnD,OAAO,YAAW,SAAS,SAAM,MAAS,CAAC;IAC5C,CAAC;IAEO,sCAAgB,GAAxB;QACC,IAAI,CAAE,IAAI,CAAC,SAAS,CAAC,MAAM;YAAG,OAAO,IAAI,CAAC;QAE1C,IAAM,SAAS,GAAU,IAAI,CAAC,SAAS,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC;QACpD,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC;YAAG,OAAO,SAAS,CAAC;QAEnD,OAAO,OAAM,SAAS,OAAK,CAAC;IAC7B,CAAC;IAEO,mCAAa,GAArB,UAAuB,MAAc;QACpC,IAAI,CAAE,IAAI,CAAC,MAAM,CAAC,MAAM;YAAG,OAAO,QAAQ,CAAC;QAE3C,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAG;YAC9B,IAAM,MAAM,GAAU,IAAI,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC,MAAM,CAAC,CAAC;gBAC9C,IAAI,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC,CAAC;gBAC9B,IAAI,CAAC;YAEN,OAAO,IAAI,GAAG,MAAM,GAAG,IAAI,CAAC;SAC5B;QAED,IAAM,SAAS,GAAU,yBAAc,CAAE,MAAM,EAAE,6BAAkB,CAAE,CAAC;QACtE,IAAM,SAAS,GAAU,uBAAY,CAAE,MAAM,CAAE,CAAC;QAChD,IAAM,MAAM,GAAU,yBAAc,CAAE,MAAM,CAAE,CAAC;QAC/C,OAAO,GAAG,GAAG,SAAS;YACrB,IAAI,CAAC,MAAM;iBACT,GAAG,CAAE,UAAA,MAAM;gBACX,IAAM,SAAS,GAAU,MAAM,CAAC,MAAM,CAAC,CAAC;oBACvC,OAAM,MAAM,CAAC,IAAI,CAAE,GAAG,CAAE,OAAK,CAAC,CAAC,CAAC,IAAI,CAAC;gBACtC,OAAO,SAAS,GAAG,SAAS,CAAC;YAC9B,CAAC,CAAE;iBACF,IAAI,CAAE,SAAS,CAAE,GAAG,SAAS;YAC/B,MAAM,GAAG,GAAG,CAAC;IACf,CAAC;IACF,kBAAC;AAAD,CA5DA,AA4DC,IAAA;AA5DY,kCAAW","file":"ValuesToken.js","sourcesContent":["import { IRIToken } from \"./IRIToken\";\nimport { LiteralToken } from \"./LiteralToken\";\nimport { PrefixedNameToken } from \"./PrefixedNameToken\";\nimport { getIndentation, getSeparator, INDENTATION_SPACES } from \"./printing\";\nimport { TokenNode } from \"./TokenNode\";\nimport { VariableToken } from \"./VariableToken\";\n\n\nexport class ValuesToken implements TokenNode {\n\treadonly token:\"values\" = \"values\";\n\n\treadonly variables:VariableToken[];\n\treadonly values:(IRIToken | PrefixedNameToken | LiteralToken | \"UNDEF\")[][];\n\n\tconstructor() {\n\t\tthis.variables = [];\n\t\tthis.values = [];\n\t}\n\n\n\taddValues( variable:VariableToken, ...values:(IRIToken | PrefixedNameToken | LiteralToken | \"UNDEF\")[] ):this {\n\t\tthis.variables.push( variable );\n\t\tthis.values.push( values );\n\n\t\treturn this;\n\t}\n\n\n\ttoString( spaces?:number ):string {\n\t\tconst variables:string = this._getVariablesStr();\n\n\t\tconst values:string = this._getValuesStr( spaces );\n\t\treturn `VALUES ${ variables } ${ values }`;\n\t}\n\n\tprivate _getVariablesStr():string {\n\t\tif( ! this.variables.length ) return \"()\";\n\n\t\tconst variables:string = this.variables.join( \" \" );\n\t\tif( this.variables.length === 1 ) return variables;\n\n\t\treturn `( ${ variables } )`;\n\t}\n\n\tprivate _getValuesStr( spaces?:number ):string {\n\t\tif( ! this.values.length ) return \"{ () }\";\n\n\t\tif( this.values.length === 1 ) {\n\t\t\tconst values:string = this.values[ 0 ].length ?\n\t\t\t\tthis.values[ 0 ].join( \" \" ) :\n\t\t\t\t\"()\";\n\n\t\t\treturn \"{ \" + values + \" }\";\n\t\t}\n\n\t\tconst subIndent:string = getIndentation( spaces, INDENTATION_SPACES );\n\t\tconst separator:string = getSeparator( spaces );\n\t\tconst indent:string = getIndentation( spaces );\n\t\treturn \"{\" + separator +\n\t\t\tthis.values\n\t\t\t\t.map( values => {\n\t\t\t\t\tconst valuesStr:string = values.length ?\n\t\t\t\t\t\t`( ${ values.join( \" \" ) } )` : \"()\";\n\t\t\t\t\treturn subIndent + valuesStr;\n\t\t\t\t} )\n\t\t\t\t.join( separator ) + separator +\n\t\t\tindent + \"}\";\n\t}\n}\n"]}